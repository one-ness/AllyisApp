@model AllyisApps.ViewModels.EditProfileViewModel
@{
    Layout = "~/Views/Shared/_LayoutJustAForm.cshtml";
    ViewBag.Title = AllyisApps.Resources.Views.Account.Strings.EditProfile;
}
@{ ViewData.Add("Controller", "Account"); }
@{ ViewData.Add("Action", "EditProfile"); }

@using (Html.BeginForm((string)(ViewData["Action"]), (string)ViewData["Controller"], new { ReturnUrl = (string)(ViewBag.ReturnUrl) }, FormMethod.Post, new { @class = "form", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(string.Empty, new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.ReqLabelFor(m => m.Email, AllyisApps.Resources.Views.Account.Strings.Email)
                @Html.ValidationMessageFor(m => m.Email)
                @Html.TextBoxFor(m => m.Email, new { @readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.FirstName, AllyisApps.Resources.Views.Account.Strings.FirstName)
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.LastName, AllyisApps.Resources.Views.Account.Strings.LastName)
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.DateOfBirth, AllyisApps.Resources.Views.Account.Strings.DateOfBirth)
                @Html.EditorFor(m => m.DateOfBirth, new { htmlattributes = new { @class = "form-control" } })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.PhoneNumber, AllyisApps.Resources.Views.Account.Strings.PhoneNumber)
                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PhoneNumber)
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.ReqLabelFor(m => m.Address, AllyisApps.Resources.Views.Account.Strings.Address)
                @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.Country, AllyisApps.Resources.Views.Account.Strings.Country)
                @Html.DropDownListFor(m => m.Country, new SelectList(Model.GetLocalizedValidCoutriesDictionary(), "Key", "Value"), AllyisApps.Resources.Views.Account.Strings.DropDownEmpty, new { @id = "Country", @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.State, AllyisApps.Resources.Views.Account.Strings.State)
                @Html.DropDownListFor(m => m.State, new SelectList(new List<string>()), AllyisApps.Resources.Views.Account.Strings.DropDownEmpty, new { @id = "State", @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.City, AllyisApps.Resources.Views.Account.Strings.City)
                @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.PostalCode, AllyisApps.Resources.Views.Account.Strings.PostalCode)
                @Html.TextBoxFor(m => m.PostalCode, new { @class = "form-control" })
            </div>
        </div>
    </div>

    <div class="form-group allyis-action-buttons">
        <a href="/Account/Index" class="btn btn-default">@AllyisApps.Resources.Views.Account.Strings.Cancel</a>
        <button class="btn btn-primary" type="submit" value=@AllyisApps.Resources.Views.Account.Strings.Save>@AllyisApps.Resources.Views.Account.Strings.Save</button>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            var preserveState = '@(Model != null ? (AllyisApps.Resources.ViewModels.Auth.States.ResourceManager.GetString(Model.Clean(Model.State)) ?? Model.State) : "")';
            //$('#State').prop("disabled", true);

            if ($('#Country').val() != "") {
                updateStateDDL(function () {
                    if (preserveState != "") {
                        var ddl = document.getElementById('State');
                        for (var i = 0; i < ddl.options.length; i++) {
                            if (ddl.options[i].text === preserveState) {
                                ddl.selectedIndex = i;
                            }
                        }
                    }
                });
            }

            $('#Country').change(updateStateDDL);
        });

        function updateStateDDL(successCallback) {
            if ($('#Country').val() != "") {
                $.ajax({
                    type: "POST",
                    url: "/Home/GetStates",
                    data: JSON.stringify({ country: $('#Country').val() }),
                    datatype: "json",
                    contentType: "application/json",
                    success: function (states) {
                        $('#State').empty();
                        $('#State').append("<option value=\"\">" + "@AllyisApps.Resources.Views.Account.Strings.DropDownEmpty" + "</option>");
                        Object.keys(states).forEach(function (key) {
                            $('#State').append("<option value=\"" + key + "\">" + states[key] + "</option>");
                        });
                        $('#State').prop("disabled", false);

                        successCallback();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("Error: " + errorThrown)
                    }
                });
            } else {
                $('#State').empty();
                $('#State').append("<option value=\"\">" + "@AllyisApps.Resources.Views.Account.Strings.DropDownEmpty" + "</option>");
                //$('#State').prop("disabled", true);
            }
        }
    </script>
}