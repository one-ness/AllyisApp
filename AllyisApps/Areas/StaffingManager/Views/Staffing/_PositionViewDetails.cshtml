@model AllyisApps.Areas.StaffingManager.ViewModels.Staffing.ViewPositionViewModel
@{
	DisplayHints.ShowBreadcrumbs = true;
	DisplayHints.BreadcrumbNavPartialLocation = "~/Areas/StaffingManager/Views/Shared/_BreadcrumbNavPartial.cshtml";
	DisplayHints.LayoutThemeBundle = "~/Content/StaffingManager";
	ViewBag.TitleBar = Strings.MyAccount;
	ViewData["SubscriptionId"] = Model.SubscriptionId;
	ViewData["SubscriptionName"] = Model.SubscriptionName;

}

<link rel="stylesheet" type="text/css" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />
<link rel="stylesheet" type="text/css" href="~/Content/jquery.comiseo.daterangepicker.css" />

<style>
	.billing-amount {
		width: 60%;
		float: left;
	}

	.billing-frequency {
		width: 38%;
		float: right;
	}

	.employment-type {
		width: 60%;
		float: left;
	}

	.duration {
		width: 38%;
		float: right;
	}

	.position-level {
		width: 60%;
		float: left;
	}

	.position-count {
		width: 38%;
		float: right;
	}

	div {
		padding-left: 2px;
		padding-right: 2px;
	}

	#tags {
		float: left;
		border: 1px solid #ccc;
		padding: 5px;
	}

	#tags > span {
		cursor: pointer;
		display: block;
		float: left;
		color: #fff;
		font-size: 10px;
		background: #336B7B;
		padding: 5px;
		padding-right: 25px;
		margin: 4px;
	}

	#tags > span:hover {
		opacity: 0.7;
	}

	#tags > input {
		background: #CBBEDF;
		border: 0;
		margin: 4px;
		padding: 7px;
		width: auto;
	}

	label {
		float: left;
	}

	.panel-heading{
		padding-bottom: 5px;
	}

	.paragraph {
		white-space: pre-wrap;
	}

	.status {
		background-color: #F0D257;
	}

	.main-body {
		line-height: 60%;
		padding-top: 17px;
	}

	.pad-left {
		padding-left: 33px;
	}

	.pad-right {
		padding-right: 33px;
	}

	.pad-mid {
		padding-left: 120px;
	}
</style>


<div class="flexbox-row flexbox-row-2-col-collapse">
	<div style="position: relative">
		<div class="panel-heading panel-title col-md-12">
			<div class="col-md-6 fa-pull-left">
				<h1 >@Model.PositionTitle</h1>
				<div class="form-group" id="tags">
					<Label>Tags</Label>
				</div>
				<br>
				<br>
			</div>
			<div class="col-md-6 fa-pull-right">
				<Label>@Strings.Status &nbsp;</Label>
				@foreach (var sta in Model.PositionStatuses)
				{
					if (sta.PositionStatusId == Model.PositionStatusId)
					{
						<span class="status">&nbsp;&nbsp;@sta.PositionStatusName&nbsp;&nbsp;</span> 
					}
				}
				<div class="form-group fa-pull-right">
					@if (Model.StartDate != null)
					{
						<label>@Strings.StartDate: &nbsp;</label>
						@Model.StartDateFormat.ToShortDateString()
						<span class="fa fa-fw fa-calendar"></span>
					}
					<br>
					<div class="pull-left">
						<label>
							@Strings.ExpectedDuration:&nbsp;
						</label>
						@Model.DurationMonths&nbsp;@Strings.Months
					</div>
				</div>
			</div>
			<br>
			<br>
			<br>
			<br>
			<br>
			<span class="fa-pull-right">@Strings.Edit: &nbsp;<a href="@Url.Action(ActionConstants.EditPosition, ControllerConstants.Staffing, new { positionId = Model.PositionId, subscriptionId = Model.SubscriptionId })"><i class="glyphicon glyphicon-edit fa-pull-right"></i></a></span>
		</div>
		<div class="panel panel-default col-md-12 main-body">
			<div class="col-md-4 fa-pull-left row pad-left">
				<div class="form-group row">
					<label>@Strings.PositionLevel: &nbsp;</label>
					@foreach (var lev in Model.PositionLevels)
					{
						if (lev.PositionLevelId == Model.PositionLevelId)
						{
							<span class="pull-right">@lev.PositionLevelName</span>
						}
					}
				</div>
				<div class="form-group  row">
					<label>@Strings.EmploymentType: &nbsp;</label>
					@foreach (var typ in Model.EmploymentTypes)
					{
						if (typ.EmploymentTypeId == Model.EmploymentTypeId)
						{
							<span class="pull-right">@typ.EmploymentTypeName</span>
						}
					}
				</div>
				<div class="form-group row">
					<label>@Strings.BillingRate: &nbsp;</label>
					<span class="pull-right">
						@Model.BillingRateAmount &nbsp;
						@Model.BillingRateFrequency
					</span>
				</div>
			</div>
			<div class="col-md-4 row pad-mid">
				<div class="form-group row">
					<label>@Strings.PositionsAvailable: &nbsp;</label>
					<span class="pull-right">@Model.PositionCount</span>
				</div>
				<div class="form-group row">
					<label>@Strings.Location:&nbsp;&nbsp;</label>
					<span class="pull-right">
						@if (Model.PositionAddress.City != "" && Model.PositionAddress.City != null)
						{
							@Model.PositionAddress.City
						}
						@if (Model.PositionAddress.State != "" && Model.PositionAddress.State != null)
						{
							@:,&nbsp;@Model.PositionAddress.State
						}
						@if (Model.PositionAddress.Country != "" && Model.PositionAddress.Country != null)
						{
							if (Model.PositionAddress.State != "" && Model.PositionAddress.State != null)
							{
								@:&nbsp;-&nbsp;
							}
							@Model.PositionAddress.Country
						}
					</span>
				</div>
				<div class="form-group row">
					<label>@Strings.Details:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</label>
					<button type="button" data-toggle="collapse" data-target="#details">&nbsp;&nbsp;&nbsp;<i class="glyphicon glyphicon-chevron-down"></i>&nbsp;&nbsp;&nbsp;</button>
				</div>
			</div>
			<div class="col-md-4 fa-pull-right row pad-right">
				<div class="form-group row">
					<label>@Strings.Customer:&nbsp;&nbsp;</label>
					@foreach(var cust in Model.Customers)
					{
						if (cust.CustomerId == Model.CustomerId)
						{
							<span class="pull-right">@cust.CustomerName</span>
						}
					}
				</div>
				<div class="form-group row">
					<label>@Strings.HiringManager:&nbsp;&nbsp;</label>
					<span class="pull-right">@Model.HiringManager</span>
				</div>
				<div class="form-group  row">
					<label>@Strings.Team:&nbsp;&nbsp;</label>
					<span class="pull-right">@Model.TeamName</span>
				</div>
			</div>
		</div>
		<div class="pull-left col-md-12 collapse" id="details">
			@if (!string.IsNullOrEmpty(Model.RequiredSkills))
			{
				<div class="form-group">
					<label>@Strings.RequiredSkills: </label>
					<br>
					<p class="panel-default panel paragraph" width="100%">@Model.RequiredSkills</p>
				</div>
			}
			@if (!string.IsNullOrEmpty(Model.JobResponsibilities))
			{
				<div class="form-group">
					<label>@Strings.JobResponsibilities: </label>
					<br>
					<p class="panel-default panel paragraph" width="100%">@Model.JobResponsibilities</p>
				</div>
			}
			@if (!string.IsNullOrEmpty(Model.DesiredSkills))
			{
				<div class="form-group">
					<label>@Strings.DesiredSkills: </label>
					<br>
					<p class="panel-default panel paragraph" width="100%">@Model.DesiredSkills</p>
				</div>
			}
		</div>
	</div>
</div>

<div>
	<h3 class="panel-heading panel-title">@Strings.Applications: </h3>
	<div class="panel panel-default col-md-12">
		@foreach(var application in Model.Applications)
		{
			@Html.Partial("_ApplicationInfoPartial", application);
		}
		@if(Model.Applications.Count == 0)
		{
			<h3>@Strings.NoActiveApplications</h3>
		}
	</div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script>
	$(document).ready(function () {
		$("#datepicker").attr("value", " ");
		loadTags();
	});

	function loadTags() {
		var t = [];
		@foreach(var y in Model.Tags)
		{
			@: t.push("@y");
		}
		for (var x in t)
		{
			var spa = document.createElement("span");
			var n = document.createTextNode(t[x]);
			spa.appendChild(n);
			document.getElementById("tags").appendChild(spa);
		}
	}


	function updateTags(tag) {
		var parsed = JSON.parse(document.getElementById("TagsToSubmit").value);
		var tagsInput = [];
		for (var x in parsed) {
			tagsInput.push(parsed[x]);
			console.log("Parsed: " + parsed);
		}
		var newArr = [];
		for (var i in parsed) {
			newArr.push(tagsInput[i]);
		}
		newArr.push(tag);
		document.getElementById("TagsToSubmit").value = JSON.stringify(newArr);
		console.log("AfterTagDebug: " + document.getElementById("TagsToSubmit").value);
	}

	function removeTag(tag) {
		var parsed = JSON.parse(document.getElementById("TagsToSubmit").value);
		var tagsInput = [];
		for (var x in parsed) {
			tagsInput.push(parsed[x]);
			console.log("Parsed: " + parsed);
		}
		var newArr = [];
		for (var i in parsed) { //push all but the one you want removed
			if (tagsInput[i] != tag) newArr.push(tagsInput[i]);
		}
		document.getElementById("TagsToSubmit").value = JSON.stringify(newArr);
		console.log("AfterTagDebug: " + document.getElementById("TagsToSubmit").value);
	}

	$(function () {
		$("#tags input").on({
			focusout: function () {
				var txt = this.value.replace(/[^a-z0-9\+\-\.\#]/ig, ''); // allowed characters
				if (txt) {
					$("<span />", { text: txt.toLowerCase(), insertAfter: this });
					updateTags(txt);
					console.log("ADD: " + txt);
				}
				this.value = "";
			},
			keyup: function (ev) {
				// if: comma|enter (delimit more keyCodes with | pipe)
				if (/(188|13|32)/.test(ev.which)) $(this).focusout();
			}
		});

	});
</script>
