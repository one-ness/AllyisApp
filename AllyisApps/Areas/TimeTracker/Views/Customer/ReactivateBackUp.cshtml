@*@using AllyisApps.ViewModels.TimeTracker.Customer;
@using AllyisApps.ViewModels.TimeTracker.Project;
@using AllyisApps.Services;

@model ManageCustomerViewModel

@{
    DisplayHints.PageBodyId = "tt-customer";
    ViewBag.Title = Strings.CustomerList;
    ViewData["IsManager"] = Model.canEdit;
    Layout = "~/Areas/TimeTracker/Views/Shared/_Layout.cshtml";
    var customerCount = 0;
    var empty = new EditCustomerInfoViewModel() { OrganizationId = Model.OrganizationId };
    var emptyProj = new EditProjectViewModel();
    var createButtonClass = !Model.canEdit ? "invisible" : "";
}

@if (Model.Customers.Count() > 0)
{
    <div class="panel-group customer-list" id="customer-panel" role="tablist">
        @foreach (CustomerProjectViewModel customer in Model.Customers)
                {
                    var collapseTarget = string.Format("customerNumber{0}", customer.CustomerInfo.CustomerId);
                    var customerDetailsTarget = string.Format("custDetails{0}", customerCount);
                    var projectCount = customer.Projects.Count();
                    var projectCountLabel = projectCount == 1 ? "project" : "projects";
            <div class="panel panel-customer">
                <div class="panel-heading" role="tab">
                    <a class="accordion-toggle collapsed" role="button" data-toggle="collapse" data-target="#@collapseTarget" data-keyboard="true" href="#">
                        <h4 class="panel-title">
                            <i class="chevron"></i>
                            <span class="searchable">@customer.CustomerInfo.Name</span>
                            <span class="small text-muted">(@projectCount @projectCountLabel)</span>
                        </h4>
                    </a>
                    <a href="@Url.Action(ActionConstants.ReactivateCustomer, ControllerConstants.Customer, new { id = customer.CustomerInfo.CustomerId })" class="btn btn-default @createButtonClass">@Strings.Reactivate <i class="fa fa-plus"></i></a>
                </div>
                <div id="@collapseTarget" class="panel-collapse search-expand collapse panel-two-table-wrap" role="tabpanel">
                    <div style="width: 100%">
                        <div class="list-group list-group-with-buttons project-list">
                            @foreach (Project project in customer.Projects)
                            {
                                var projectID = string.Format("project{0}", project.ProjectId);
                                <div class="list-group-item" id="@projectID">
                                    <a class="accordion-toggle collapsed" href="@Url.Action(ActionConstants.Details, ControllerConstants.Project, new { projectId = project.ProjectId })">

                                        <span class="searchable projectname">@project.Name</span>
                                    </a>*@



                                    @*// This list group scheme is not possible. Review alternatives and then uncomment.*@



                                    @*@if (Model.canEdit)
                                    {
                                        <a href="@Url.Action(ActionConstants.Edit, ControllerConstants.Project, new { id = project.ProjectId })" class="pull-right"><i class="fa fa-lg fa-fw fa-cog"></i></a>
                                        <a href="@Url.Action(ActionConstants.Delete, ControllerConstants.Project, new { id = project.ProjectId })" class="pull-right" style="margin-left:2px;" onclick="return confirm('Are you sure you wish to Delete the project @project.Name?')">
                                            <i class="fa fa-times"></i>
                                        </a>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>customerCount += 1;
                }
    </div>

}*@


