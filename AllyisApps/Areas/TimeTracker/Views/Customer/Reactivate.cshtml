@using AllyisApps.ViewModels.TimeTracker.Customer;
@using AllyisApps.ViewModels.TimeTracker.Project;
@using AllyisApps.Services;

@model ManageCustomerViewModel

@{
    DisplayHints.PageBodyId = "tt-customer";
    ViewBag.Title = Strings.CustomerList;
    ViewData["IsManager"] = Model.canEdit;
    Layout = "~/Areas/TimeTracker/Views/Shared/_Layout.cshtml";
    //var customerCount = 0;
    string action = ViewBag.Action;
    var empty = new EditCustomerInfoViewModel() { OrganizationId = Model.OrganizationId };
    var emptyProj = new EditProjectViewModel();
    var createButtonClass = !Model.canEdit ? "invisible" : "";
}

<div>
    <div>
            <div>
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @{var customers = new List<Customer>();}
                    @if (customers.Count() > 0)
                    {
                        var _customersprojects = Model.Customers.ToList();

                        foreach (var customer in _customersprojects)
                        {
                            customers.Add(customer.CustomerInfo);
                        }
                    }
                    <div id="swapper-ui" class="swapper-ui">
                        <div class="left">
                            <label>@*@Strings.OffProj*@Inactive Customers</label>
                            @*<input type="text" placeholder=@AllyisApps.Resources.TimeTracker.Views.Project.Strings.SearchPlaceholder class="form-control" />*@
                            @*
                                Create a multi-select list that is populated from SubscriptionUsers
                                Uses Javascript and the add/remove buttons to add and remove items from this listbox
                            *@
                            @Html.ListBoxFor(m => m.Customers, new MultiSelectList(customers)@*new MultiSelectList(Model.Customers, "CustomerId", "Name"), new { @name = "customers", @id = "inactive-customers", @class = "filter-list", @Multiple = "multiple" }*@)
                        </div>
                        @*<div class="actions">
                            <a href="javascript: moveSelectedProjectEditModal('in')" class="btn btn-default move-in">
                                <i class="fa fa-lg fa-arrow-right"></i>
                            </a>
                            <a href="javascript: moveSelectedProjectEditModal('out')" class="btn btn-default move-out">
                                <i class="fa fa-lg fa-arrow-left"></i>
                            </a>
                        </div>*@
                    </div>
                @*@Html.HiddenFor(m => m.ParentCustomerId)
                @Html.HiddenFor(m => m.ProjectId)
                @Html.HiddenFor(m => m.IsCreating)*@
            </div>
    </div><!-- /.modal-content -->
</div><!-- /.modal-dialog -->
