@using AllyisApps.ViewModels.TimeTracker.Customer;
@using AllyisApps.ViewModels.TimeTracker.Project;
@using AllyisApps.Services;

@model ManageCustomerViewModel

@{
    DisplayHints.PageBodyId = "tt-customer";
    ViewBag.Title = Strings.CustomerList;
    ViewData["IsManager"] = Model.canEdit;
    Layout = "~/Areas/TimeTracker/Views/Shared/_Layout.cshtml";
    var empty = new EditCustomerInfoViewModel() { OrganizationId = Model.OrganizationId };
    var emptyProj = new EditProjectViewModel();
    var createButtonClass = !Model.canEdit ? "invisible" : "";
}


<div class="row">
    <div class="col-xs-12 col-md-8 col-md-push-2">
        <div class="allyis-action-buttons-top">
            <a href="@Url.Action(ActionConstants.Create, ControllerConstants.Customer)" class="btn btn-default @createButtonClass">@Strings.AddCustomer <i class="fa fa-plus"></i></a>
            <a href="@Url.Action(ActionConstants.Reactivate, ControllerConstants.Customer)" class="btn btn-default @createButtonClass">@Strings.Reactivate <i class="fa fa-plus"></i></a>

            <div class="pull-right">
                <input type="text" id="SearchInput" placeholder=@Strings.SearchPlaceholder class="form-control">
            </div>
        </div>

        <div class="flexbox-row flexbox-row-2-col-collapse">
            <div class="col-md-6">
                <div class="panel panel-info" style="position: relative">
                    <div class="panel-heading">
                        <h1 class="panel-title">@Strings.CustomerList</h1>
                    </div>
                    <div class="panel-body list-group" id="Customers">
                        @foreach (CustomerProjectViewModel customer in Model.Customers)
                        {
                            <a onclick="PopulateProjects('@customer.CustomerInfo.CustomerId')" class="list-group-item" id="@customer.CustomerInfo.CustomerId">
                                <text>@customer.CustomerInfo.Name</text>
                            </a>
                        }
                        <br />
                    </div>
                </div>
                <div class="pull-left">
                    <a href="@Url.Action(ActionConstants.Edit, ControllerConstants.Customer)" class="glyphicon glyphicon-pencil"></a>
                    <a href="@Url.Action(ActionConstants.Add, ControllerConstants.Customer)" class="glyphicon glyphicon-plus"></a>
                    <a href="@Url.Action(ActionConstants.Add, ControllerConstants.Customer)" class="glyphicon glyphicon-remove" style="color:dimgrey"></a>
                </div>
            </div>
            <div class="col-md-6" height="100%">
                <div class="panel panel-info">
                    <div class="panel-heading">
                        <h1 class="panel-title">@Strings.Project</h1>
                    </div>
                    <div id="Projects">
                        <!--projects belong to chosen customer will be populated here-->
                    </div>
                </div>
                <div class="pull-left">
                    <span class="glyphicon glyphicon-pencil"></span>
                    <span class="glyphicon glyphicon-plus"></span>
                    <span class="glyphicon glyphicon-remove"></span>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        var selected;

        if (@Model.Customers.Count() > 0)
        {
            $(document).ready(function () {
                PopulateProjects(@Model.Customers.First().CustomerInfo.CustomerId)
            })
        }

        function PopulateProjects(chosenCustomerId) {
            $(selected).css("font-weight", "Normal");
            selected = "#" + chosenCustomerId;
            $(selected).css("font-weight", "Bold");
            $.ajax({
                    type: 'POST',
                    cache: false,
                    url: '@Url.Action("PopulateProjects", "Customer")',
                    data: { customerId: chosenCustomerId },
                    success: function (response) {
                        $("#Projects").empty();
                        $("#Projects").html(response);
                    }
            });
        }
    </script>
}