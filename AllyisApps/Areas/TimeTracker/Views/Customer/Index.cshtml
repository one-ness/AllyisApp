@using AllyisApps.ViewModels.TimeTracker.Customer;
@using AllyisApps.ViewModels.TimeTracker.Project;
@using AllyisApps.Services;

@model ManageCustomerViewModel

@{
    DisplayHints.PageBodyId = "tt-customer";
    ViewBag.Title = Strings.CustomerList;
    ViewData["IsManager"] = Model.canEdit;
    Layout = "~/Areas/TimeTracker/Views/Shared/_Layout.cshtml";
    var customerCount = 0;
    var empty = new EditCustomerInfoViewModel() { OrganizationId = Model.OrganizationId };
    var emptyProj = new EditProjectViewModel();
	var createButtonClass = !Model.canEdit ? "invisible" : "";
}

<div class="row">
    <div class="col-xs-12 col-md-8 col-md-push-2">
        <div class="allyis-action-buttons-top">
            <a href="@Url.Action(ActionConstants.Create, ControllerConstants.Customer)" class="btn btn-default @createButtonClass">@Strings.AddCustomer <i class="fa fa-plus"></i></a>
            <a href="@Url.Action(ActionConstants.Reactivate, ControllerConstants.Customer)" class="btn btn-default @createButtonClass">@Strings.Reactivate <i class="fa fa-plus"></i></a>

            <div class="pull-right">
                <input type="text" id="SearchInput" placeholder=@Strings.SearchPlaceholder class="form-control">
            </div>
        </div>
        @if (Model.Customers.Count() > 0)
        {
            <div class="panel-group customer-list" id="customer-panel" role="tablist">
                <div id="swapper-ui" class="swapper-ui">
                    <div class="left">
                        <label>@Strings.Customer</label>
                        <select name="customers" id="active-customers" multiple="multiple" class="filter-list" onchange="populateProjects(this.value)">
                            @for (var i = 0; i < Model.Customers.Count(); i++)
                            {
                                var css_class = "out";
                                <option value="@Model.Customers.ElementAt(i).CustomerInfo.Name" class="@css_class" data-search="@Model.Customers.ElementAt(i).CustomerInfo.Name">@Model.Customers.ElementAt(i).CustomerInfo.Name</option>
                            }
                        </select>
                    </div>
                    @for (var i = 0; i < Model.Customers.Count(); i++)
                    {
                        for (var j = 0; j < Model.Customers.ElementAt(i).Projects.Count(); j++)
                        {
                            <div class="right hidden" id="@Model.Customers.ElementAt(i).CustomerInfo.Name">
                                <label>@Strings.Project</label>
                                @Html.ListBoxFor(m => Model.Customers.ElementAt(i).Projects, new MultiSelectList(Model.Customers.ElementAt(i).Projects, "ProjectId", "Name"), new { @name = "active", @id = "active-projects", @class = "filter-list", @Multiple = "multiple" })
                            </div>
                        }
                    }
                </div>
            </div>
            @*<div class="allyis-action-buttons">
                    <a href="@Url.Action(ActionConstants.Create, ControllerConstants.Customer)" class="btn btn-default">@AllyisApps.Resources.TimeTracker.Views.Customer.Strings.AddCustomer <i class="fa fa-plus"></i></a>
                </div>*@
        }
		@if (Model.canEdit)
		{
			<div class="row">
				<div class="bulk col-xs-12 col-sm-8" style="float:left;">
					<h4>@Strings.ImportCustomersTitle</h4>
					<p>@Strings.ImportCustomers</p>
					@using (Html.BeginForm(ActionConstants.Template, ControllerConstants.Customer, null, FormMethod.Get))
                    {
                        @Html.AntiForgeryToken();
                        <div style="float:left; width:100%;">
                            <input type="file" id="upload-box" name="upload" style="display:none;"
                                   onchange="$('#upload-file-name-display').val($(this).val().replace('C:\\fakepath\\', ''));" />
                            <input id="upload-file-name-display" class="form-control"
                                   onchange="$('#upload-file-name-display').val($(this).val().replace('C:\\fakepath\\', ''));" />
                        </div>
						<div style="float:left">
							<input style="margin-top: 10px;" type="submit" id="template-button" value="@Strings.Template" class="btn btn-primary" />
						</div>
					}
                    @using (Html.BeginForm(ActionConstants.Import, ControllerConstants.Customer, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <div style="float:right; margin-bottom: 15px;">
                            <a class="btn btn-primary" style="margin-top:10px; margin-right: 10px;" onclick="$('input[id=upload-box]').click();">@Strings.ChooseFile</a>
                            <input style="margin-top: 10px; margin-right: 10px;" type="submit" id="upload-button" value="@Strings.Upload" class="btn btn-primary" />
                        </div>
                    }
				</div>
			</div>
		}
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        var showing;

        if (@Model.Customers.Count() > 0)
        {
            $(document).ready(function () {
                $("select#active-customers option").filter(function () {
                    return $(this).val() == "@Model.Customers.First().CustomerInfo.Name"
                }).prop('selected', true);
                $("#@Model.Customers.First().CustomerInfo.Name").removeClass('hidden');
                showing = "#@Model.Customers.First().CustomerInfo.Name";
            })
        }

        function populateProjects(id)
        {
            var select = document.getElementById("active-projects");
            $(showing).addClass('hidden');
            $("#" + id).removeClass('hidden');
            showing = "#" + id;
        }

    </script>
    @Scripts.Render("~/bundles/TTCustomerIndex");
}
