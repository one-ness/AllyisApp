@using AllyisApps.ViewModels.TimeTracker.Customer;
@using AllyisApps.ViewModels.TimeTracker.Project;
@using AllyisApps.Services;

@model ManageCustomerViewModel

@{
    DisplayHints.PageBodyId = "tt-customer";
    ViewBag.Title = Strings.CustomerList;
    ViewData["IsManager"] = Model.canEdit;
    Layout = "~/Areas/TimeTracker/Views/Shared/_Layout.cshtml";
    var empty = new EditCustomerInfoViewModel() { OrganizationId = Model.OrganizationId };
    var emptyProj = new EditProjectViewModel();
    var createButtonClass = !Model.canEdit ? "invisible" : "";
}


<div class="row">
    <div class="col-xs-12 col-md-8 col-md-push-2">
        <ul class="nav nav-tabs">
            <li id="activeTab" class="active"><a onclick="populateActiveForm()">Active</a></li>
            <li id="inactiveTab"><a onclick="populateInactiveForm()">Inactive</a></li>
        </ul>
        <br/>
            @*
                <div class="allyis-action-buttons-top">
                    <a href="@Url.Action(ActionConstants.Create, ControllerConstants.Customer)" class="btn btn-default @createButtonClass">@Strings.AddCustomer <i class="fa fa-plus"></i></a>
                    <a href="@Url.Action(ActionConstants.Reactivate, ControllerConstants.Customer)" class="btn btn-default @createButtonClass">@Strings.Reactivate <i class="fa fa-plus"></i></a>

                    <div class="pull-right">
                        <input type="text" id="SearchInput" placeholder=@Strings.SearchPlaceholder class="form-control">
                    </div>
                </div> *@

        <form>
            <div id="resultPartialForm" class="row">
                <!--Partial view will be updated here every time a tab is chosen-->
                <div id="activePartial">
                    @Html.Partial("_IndexPartial_Active")
                </div>
                <div id="inactivePartial" class="hidden">
                    @Html.Partial("_IndexPartial_Inactive")
                </div>
            </div>
        </form>    
    </div>
</div>

@section Scripts{
       <script type="text/javascript">
        var selectedCust;
        var selectedProj;

        @if (@Model.Customers.Count() > 0)
        {
        <text>
            $(document).ready(function () {
                PopulateProjects(@Model.Customers.First().CustomerInfo.CustomerId)
           })
           </text>
        }

        function populateActiveForm() {
            $(function showActiveCustomers() {
                $("#inactiveTab").removeClass('active');
                $("#activeTab").addClass('active');
                $("#inactivePartial").addClass('hidden');
                $("#activePartial").removeClass('hidden');
            });
           }

        function populateInactiveForm() {
            $(function showInactiveCustomers() {
                $("#activeTab").removeClass('active');
                $("#inactiveTab").addClass('active');
                $("#activePartial").addClass('hidden');
                $("#inactivePartial").removeClass('hidden');
            });
        }

        function PopulateProjects(chosenCustomerId) {
            $("#" +selectedCust).css("font-weight", "Normal");
            selectedCust = chosenCustomerId;
            $("#" + selectedCust).css("font-weight", "Bold");
            $.ajax({
                    type: 'POST',
                    cache: false,
                    url: '@Url.Action("PopulateProjects", "Customer")',
                    data: { customerId: chosenCustomerId },
                    success: function (response) {
                        $("#Projects").empty();
                        $("#Projects").html(response);
                    }
            });
           }

        function PopulateInactiveProjects(chosenCustomerId, isActive) {
            $("#" +selectedCust).css("font-weight", "Normal");
            selectedCust = chosenCustomerId;
            $("#" + selectedCust).css("font-weight", "Bold");
            if (isActive == 1) {
                $("#reactivateCustomerButton").attr("disabled", "disabled");
            } else {
                $("#reactivateCustomerButton").removeAttr("disabled");
            }
            $.ajax({
                    type: 'POST',
                    cache: false,
                    url: '@Url.Action("PopulateInactiveProjects", "Customer")',
                    data: { customerId: chosenCustomerId },
                    success: function (response) {
                        $("#InactiveProjects").empty();
                        $("#InactiveProjects").html(response);
                    }
            });
           }

           function SelectProject(project)
           {
               $("#project-" + selectedProj).css("font-weight", "Normal");
               selectedProj = project;
               $("#project-" + selectedProj).css("font-weight", "Bold");
           }

           function EditCustomer()
           {
               if (selectedCust != null)
               {
                    var link = '@Url.Action(ActionConstants.Edit, ControllerConstants.Customer, new { id = "-1" })';
                    link = link.replace("-1", selectedCust);
                    window.location = link;
               }
           }

           function EditProject()
           {
               if (selectedProj != null)
               {
                    var link = '@Url.Action(ActionConstants.Edit, ControllerConstants.Project, new { id = "-1" })';
                    link = link.replace("-1", selectedProj);
                    window.location = link;
               }
           }

           function DeleteCustomer()
           {
               if (selectedCust != null && confirm("Delete customer " + $("#" + selectedCust).text().trim() + "?"))
               {
                    var link = '@Url.Action(ActionConstants.Delete, ControllerConstants.Customer, new { id = "-1" })';
                    link = link.replace("-1", selectedCust);
                    window.location = link;
               }
           }

           function DeleteProject()
           {
               if (selectedCust != null && confirm("Delete project " + $("#project-" + selectedProj).text().trim() + "?"))
               {
                    var link = '@Url.Action(ActionConstants.Delete, ControllerConstants.Project, new { id = "-1" })';
                    link = link.replace("-1", selectedProj);
                    window.location = link;
               }
           }

           function CreateCustomer()
           {
               window.location = '@Url.Action(ActionConstants.Create, ControllerConstants.Customer)';
           }

           function CreateProject()
           {
               if (selectedCust != null)
               {
                   var link = '@Url.Action(ActionConstants.Create, ControllerConstants.Project, new { id = "-1" })';
                   link = link.replace("-1", selectedCust);
                   window.location = link;
               }
           }

           function ReactivateCustomer()
           {
               if (selectedCust != null)
               {
                    var link = '@Url.Action(ActionConstants.Reactivate, ControllerConstants.Customer, new { id = "-1" })';
                    link = link.replace("-1", selectedCust);
                    window.location = link;
               }
           }

           function ReactivateProject()
           {
                if (selectedProj != null)
                {
                    var link = '@Url.Action(ActionConstants.Reactivate, ControllerConstants.Project, new { id = "-1" })';
                    link = link.replace("-1", selectedProj);
                    window.location = link;
                }
           }
</script>
}
