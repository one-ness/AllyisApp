@using AllyisApps.ViewModels.TimeTracker.TimeEntry;
@model UserEditViewModel

@{
    ViewBag.Title = Strings.EditUser;
    DisplayHints.BreadcrumbNavPartialLocation = "~/Areas/TimeTracker/Views/Shared/_BreadcrumbNavPartial.cshtml";
    DisplayHints.LayoutThemeBundle = "~/Content/Timetracker";
    Layout = "~/Areas/TimeTracker/Views/Shared/_TimeTrackerSidebar.cshtml";
    ViewData["UserId"] = Model.UserId;  //logged in user
    ViewData["SubscriptionId"] = Model.SubscriptionId;
    ViewData["SubscriptionName"] = Model.SubscriptionName;
}

<div class="container">
    <div class="shrink-wrap-center">
        <div id="user-edit-div">
            @using (Html.BeginForm(ActionConstants.UserEdit, ControllerConstants.TimeEntry, new { subscriptionId = Model.SubscriptionId, userId = Model.UserId }, FormMethod.Post, new { @class = string.Empty, id = "form1", role = "form", onsubmit = "return userSubmit(this);", name = "EditForm" }))
            {
                <div>
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(m => m.UserId)
                    <div class="form-group">
                        <label for="Name">@Strings.Name</label>
                        @Html.HiddenFor(m => m.UserName)
                        <span class="form-control">@Model.UserName</span>
                    </div>

                    <div class="col-xs-6 filter-row" style="display:flex">
                        <label class="col-xs-4">Name Filter:&nbsp;</label>
                        <input class="col-xs-8 form-control fa-filter" type="search" placeholder="@Strings.ProjectSearchPlaceholder" id="projectSearch" />
                    </div>

                    <div id="swapper-ui" class="swapper-ui">
                        <div class="left">
                            <label>@Strings.OffProjects</label>
                            @*<input type="text" placeholder=@AllyisApps.Resources.TimeTracker.Views.TimeEntry.Strings.ProjectSearchPlaceholder class="form-control" />*@
                            <select name="Excluded" id="excluded-projects" multiple="multiple" class="filter-list">
                                @foreach (var project in Model.AllProjects)
                                {
                                    var dataEntry = Model.UserProjects.Where(x => x.ProjectId == project.ProjectId).SingleOrDefault();
                                    var checkboxValue = dataEntry == null ? false : true;// dataEntry.CanUserProject;
                                    if (!checkboxValue)
                                    {
                                        var css_class = "out";
                                        @*@Html.HiddenFor(project.CustomerId)
                                            @Html.HiddenFor(project.ProjectId)*@
                                        <option value="@project.ProjectId" class="@css_class pwfRow" data-search="@project.ProjectName">@project.ProjectId  - @project.ProjectName (@project.CustomerName)</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="actions">
                            <a href="javascript: moveSelectedUserEditModal('in')" class="btn btn-default move-in">
                                <i class="fa fa-lg fa-arrow-right"></i>
                            </a>
                            <a href="javascript: moveSelectedUserEditModal('out')" class="btn btn-default move-out">
                                <i class="fa fa-lg fa-arrow-left"></i>
                            </a>
                        </div>
                        <div class="right">
                            <label>@Strings.OnProjects</label>
                            @*<input type="text" placeholder="Project Search 🔎" class="form-control" />*@
                            <select name="Included" id="included-projects" multiple="multiple" class="filter-list">
                                @foreach (var project in Model.AllProjects)
                                {
                                    var dataEntry = Model.UserProjects.Where(x => x.ProjectId == project.ProjectId).SingleOrDefault();
                                    var checkboxValue = dataEntry == null ? false : true;// dataEntry.CanUserProject;
                                    if (checkboxValue)
                                    {
                                        var css_class = "in";
                                        <option value="@project.ProjectId" class="@css_class pwfRow" data-search="@project.ProjectName">@project.ProjectId  - @project.ProjectName (@project.CustomerName)</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="text-right" style="padding-top: 15px; padding-bottom: 15px;">
                    <input type="button" class="btn btn-default" value=@Strings.Cancel onclick="location='@Url.Action(ActionConstants.Index, ControllerConstants.TimeEntry, new { id = Model.UserId })'" />
                    <input type="submit" value=@Strings.Save class="btn btn-primary" id="submitUser" />
                </div>
            }
        </div><!-- /.modal-content -->
    </div>
</div>

@section Scripts {
    <script src="~/Scripts/allyis-pages-with-filter.js" type="text/javascript"></script>
    <script type="text/javascript">
        pwf.addFilter("#projectSearch", "search", "self");

        var update_link = "@Url.Action(ActionConstants.UserEditAJAX, ControllerConstants.TimeEntry)";
        var index_link = "@Url.Action(ActionConstants.Index, ControllerConstants.TimeEntry, new { subscriptionId = ViewData["SubscriptionId"], userId = ViewData["UserId"] })";
    </script>
    @Scripts.Render("~/bundles/TTTimeEntryUserEdit");
}