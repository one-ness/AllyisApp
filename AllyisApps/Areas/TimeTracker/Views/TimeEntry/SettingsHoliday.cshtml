@using System.Globalization
@using AllyisApps.ViewModels.TimeTracker.TimeEntry;
@model SettingsHolidayViewModel
@{
	ViewBag.TitleBar = Strings.Settings;
	ViewBag.Title = Strings.Holidays;
	DisplayHints.BreadcrumbNavPartialLocation = "~/Areas/TimeTracker/Views/Shared/_BreadcrumbNavPartial.cshtml";
	DisplayHints.LayoutThemeBundle = "~/Content/Timetracker";
	Layout = "~/Areas/TimeTracker/Views/Shared/_TimeTrackerSidebar.cshtml";
	ViewData["UserId"] = Model.UserId;
	ViewData["SubscriptionId"] = Model.SubscriptionId;
	ViewData["SubscriptionName"] = Model.SubscriptionName;
}

@section css {
	<link rel="stylesheet" type="text/css" href="~/Content/DateRangePicker" />
}

<div class="slim">
	<div class="row">
		<div class="col-sm-2">
			@Html.Partial("_ManageSettingSideBar")
		</div>
		<div class="col-sm-10">
			<div class="panel panel-info">
				<div class="panel-heading">
					<h1 class="panel-title">@Strings.Holidays</h1>
				</div>
				<div id="Holidays">
					<ul class="nav nav-tabs" style="border-bottom:none;">
						@foreach (var year in Model.Holidays.Select(m => m.Date.Year).Distinct().OrderBy(y => y))
						{
							<li id=@year><a onclick="populateHolidayForSelectedYear(@year)">@year</a></li>
						}
					</ul>

					<table class="table table-condensed">
						<thead>
							<tr>
								<th>@Strings.Holiday</th>
								<th>@Strings.Date</th>
								<th><span class="pull-right">@Strings.Delete</span></th>
							</tr>
						</thead>
						@foreach (SettingsHolidayViewModel.HolidayViewModel Holiday in Model.Holidays)
						{
							<tr class="@Holiday.Date.Year">
								@{
									string _holidayName = Strings.ResourceManager.GetString(Holiday.HolidayName.Replace(" ", string.Empty).Replace("'", string.Empty)) ?? Holiday.HolidayName;
								}
								<td>@_holidayName</td>
								<td>@Holiday.Date.ToShortDateString()</td>
								<td>
									<a href="@Url.Action(ActionConstants.DeleteHoliday, ControllerConstants.TimeEntry, new { Model.SubscriptionId, id = Model.UserId, Holiday.HolidayId })"
									class="text-muted"
									title="@Strings.DeleteHoliday"
									onclick='confirm("@Html.Raw(string.Format(Strings.ConfirmDeleteHoliday, Holiday.HolidayName))")'>
										<span class="fa fa-fw fa-remove text-danger pull-right"></span>
									</a>
								</td>
							</tr>
						}
						<tr>
							@using (Html.BeginForm(ActionConstants.CreateHoliday, ControllerConstants.TimeEntry, new { subscriptionId = Model.SubscriptionId, id = Model.UserId }, FormMethod.Post))
							{
								@Html.AntiForgeryToken();
								@Html.HiddenFor(m => m.SubscriptionId)
								<td><input type="text" class="form-control" name="NewHolidayName" required /></td>
								<td>
									<div class="input-group" style="width: 50%;">
										<input type="text" class="form-control" id="newHolidayDate" name="newHolidayDate" value="@(DateTime.Now.ToString("d", CultureInfo.InvariantCulture))" required>
										<div class="input-group-addon">
											<span class="glyphicon glyphicon-calendar"></span>
										</div>
									</div>
								</td>
								<td><input class="pull-right btn btn-primary" type="submit" value=@Strings.Add /></td>
							}
						</tr>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>

@section scripts{
@Scripts.Render("~/bundles/jqueryui")
@Scripts.Render("~/bundles/moment")
@Scripts.Render("~/bundles/daterangepicker")

<script type="text/javascript">
	$('document').ready(function () {
		populateHolidayForSelectedYear(@DateTime.Now.Year);
		$('#newHolidayDate').singleDatePicker();
	});

	var years = eval("[" + "@(string.Join(",", Model.Holidays.Select(m => m.Date.Year).Distinct()))" + "]");

	function populateHolidayForSelectedYear(year) {
		years.forEach(function(curYear) {
			if (curYear != year) {
				$('.' + curYear).hide();
				$('#' + curYear).css("font-weight", "Normal");
			}
			else {
				$('.' + curYear).show();
				$('#' + curYear).css("font-weight", "Bold");
			}
		});
	};

	$.fn.singleDatePicker = function() {
		$(this).on("apply.daterangepicker", function (e, picker) {
			picker.element.val(picker.startDate.format(picker.locale.format));
		});
		return $(this).daterangepicker({
			singleDatePicker: true,
			showDropdowns: true,
			autoUpdateInput: false
		});
	};
</script>
}