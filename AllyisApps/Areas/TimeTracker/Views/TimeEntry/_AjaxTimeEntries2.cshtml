@using AllyisApps.ViewModels.TimeTracker.TimeEntry;
@using AllyisApps.Lib;
@using System.Globalization;
@model TimeEntryRangeForUserViewModel

@{
	DayOfWeek startOfWeek = (DayOfWeek)ViewBag.startOfWeek;
	Func<int, int> getYearWeekGroupNumber =
		d => Utility.GetDateTimeFromDays(d).Year * 100 + CultureInfo.CurrentCulture.Calendar.GetWeekOfYear(
			Utility.GetDateTimeFromDays(d).Date,
			CalendarWeekRule.FirstFourDayWeek,
			startOfWeek);
	var weekQuery = from entry in Model.Entries orderby entry.Date group entry by getYearWeekGroupNumber(entry.Date);
}

@foreach (var weekGroup in weekQuery)
{
	var dateQuery = weekGroup.OrderBy(entry => entry.Date).GroupBy(entry => entry.Date);
	<div class="panel panel-default timesheet-grouping">
		@foreach (var dateGroup in dateQuery)
		{
			var theEntries = dateGroup.Where(entry => !entry.Sample).ToList();
			var theSample = dateGroup.FirstOrDefault(entry => entry.Sample);

			var currentDate = Utility.GetDateTimeFromDays(dateGroup.First().Date).Date;
			string dateStringNums = currentDate.ToShortDateString();
			string dateStringDayLong = currentDate.DayOfWeek.ToString();
			string dateStringDayShort = DateTimeFormatInfo.CurrentInfo.AbbreviatedDayNames[(int)currentDate.DayOfWeek];

			string offDayClass = "";
			string holidayClass = "";

			if (theSample.IsOffDay)
			{ // Note: To change the color of offdays/offday entries, edit TimeTracker.css rules for '.table-row .offDay'/'.offDay .form-control', respectively.
				offDayClass = "offDay";
			}
			else if (theSample.IsHoliday)
			{
				holidayClass = "holiday";
			}

			<div class="panel-heading hidden visible-xs">
				<div class="panel-right table-col @offDayClass @holidayClass" style="display: block; background-color:transparent;">

					<label style="margin-right:2em;">@(dateStringNums) @(dateStringDayLong)</label>
				</div>
			</div>
			<div class="table-container">
				<div class="table-row">
					<div class="panel-left hidden-xs table-col text-center @offDayClass @holidayClass">
						<label style="margin: 0 5px;">@dateStringNums</label>
						<label style="margin: 0 5px;">@dateStringDayShort</label>
						<div class="panel-right table-col @offDayClass @holidayClass" style="display: block; background-color:transparent;">
							<table align="center">
								<tr>
								</tr>
							</table>
						</div>
					</div>
					<div class="panel-right table-col @offDayClass @holidayClass">
						@{
							foreach (EditTimeEntryViewModel entry in theEntries)
							{
								@Html.Partial("_AjaxTimeEntryBody2", entry)
							}
							if (theEntries.Count == 0 || theSample.IsCreatable)
							{
								@Html.Partial("_AjaxTimeEntryBody2", theSample)
							}
							if (theSample.IsManager || theSample.IsCreatable) //if the date is not locked because of lock date or logged in user is manager
							{
								theSample.Hidden = true;
								@Html.Partial("_AjaxTimeEntryBody2", theSample)
							}
							else if (!theEntries.Any())//date is locked for regular user, there is no existing entry so we need 2 sample entries for styling purpose
							{
								@Html.Partial("_AjaxTimeEntryBody2", theSample)
							}
						}
					</div>
				</div>
			</div>
		}
	</div>
}

<div class="pull-right">
	<a href="@Context.Request.RawUrl" class="btn btn-default" onclick ="return confirm('@Strings.CancelConfirm')" style="margin-right: 10px;">@Strings.Cancel</a>
	<span class="btn btn-primary" onclick="saveForm()">@Strings.Save</span>
</div>