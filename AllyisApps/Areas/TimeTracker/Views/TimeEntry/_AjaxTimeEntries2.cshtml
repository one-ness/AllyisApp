@using AllyisApps.ViewModels.TimeTracker.TimeEntry;
@using AllyisApps.Areas.TimeTracker.Core;
@using AllyisApps.Lib;
@using System.Globalization;
@model TimeEntryRangeForUserViewModel

@{
	var weekQuery = from entry in Model.Entries orderby entry.Date group entry by Model.weekProjector(entry.Date);
}
@*
@foreach (var weekGroup in @Model.weekQuery)
	{*@
	@*
	@foreach (var dateGroup in dateQuery)
		{
	var dateQuery = from entry in weekGroup orderby entry.Date group entry by entry.Date;*@
	<div class="panel panel-default timesheet-grouping">
		@for(int i = 0; i < Model.weekGrouped.Count; i++)
		{
			/*var theEntries = (from entry in dateGroup where !entry.Sample select entry).ToList();
			var theSample = (from entry in dateGroup where entry.Sample select entry).FirstOrDefault();
			int totalCount = theEntries.Count;
			int allVotedCount = (from e in theEntries where e.ApprovalState != (int)ApprovalState.NoApprovalState select e).Count();
			int allApprovedCount = (from e in theEntries where e.ApprovalState == (int)ApprovalState.Approved select e).Count();
			int allRejectedCount = (from e in theEntries where e.ApprovalState == (int)ApprovalState.NotApproved select e).Count();
			bool noneExist = totalCount == 0;
			bool noneWereVoted = allVotedCount == 0;
			bool allWereApproved = allVotedCount > 0 && totalCount == allApprovedCount;
			bool allWereRejected = allVotedCount > 0 && totalCount == allRejectedCount;
			bool anyWereChanged = (from e in theEntries where e.ModSinceApproval select e).Any();
			string containerClass = noneExist ? "" :
								noneWereVoted ? "" :
								anyWereChanged ? "pending" :
								allWereApproved ? "approved" :
								allWereRejected ? "rejected" : "pending";
			string headerClass = containerClass;

			var currentDate = Utility.GetDateTimeFromDays(dateGroup.First().Date).Date;
			string dateStringNums = currentDate.ToShortDateString();
			string dateStringDayLong = currentDate.DayOfWeek.ToString();
			string dateStringDayShort = DateTimeFormatInfo.CurrentInfo.AbbreviatedDayNames[(int)currentDate.DayOfWeek];

			string offDayClass = "";
			string holidayClass = "";

			if (theSample.IsOffDay)
			{ // Note: To change the color of offdays/offday entries, edit TimeTracker.css rules for '.table-row .offDay'/'.offDay .form-control', respectively.
				offDayClass = "offDay";
			}
			if (theSample.IsHoliday && !theSample.IsOffDay)
			{
				holidayClass = "holiday";
			}*/

			<div class="panel-heading hidden visible-xs @(Model.weekGrouped[i].headerClass)">
				<div class="panel-right table-col @Model.weekGrouped[i].offDayClass @Model.weekGrouped[i].holidayClass" style="display: block; background-color:transparent;">

					<label style="margin-right:2em;">@(Model.weekGrouped[i].dateStringNums) @(Model.weekGrouped[i].dateStringDayLong)</label>
				</div>
			</div>
			<div class="table-container @(Model.weekGrouped[i].containerClass)">
				<div class="table-row">
					<div class="panel-left hidden-xs table-col text-center @Model.weekGrouped[i].offDayClass @Model.weekGrouped[i].holidayClass">
						<label style="margin: 0 5px;">@Model.weekGrouped[i].dateStringNums</label>
						<label style="margin: 0 5px;">@Model.weekGrouped[i].dateStringDayShort</label>
						<div class="panel-right table-col @Model.weekGrouped[i].offDayClass @Model.weekGrouped[i].holidayClass" style="display: block; background-color:transparent;">

						</div>
					</div>
					<div class="panel-right table-col @Model.weekGrouped[i].offDayClass @Model.weekGrouped[i].holidayClass">
						@{
							foreach (EditTimeEntryViewModel entry in Model.weekGrouped[i].theEntries)
							{
								@Html.Partial("_AjaxTimeEntryBody2", entry)
							}
							if (Model.weekGrouped[i].theEntries.Count == 0 || !Model.weekGrouped[i].theSample.IsLocked) {
								@Html.Partial("_AjaxTimeEntryBody2", Model.weekGrouped[i].theSample)
							}
							if (Model.weekGrouped[i].theSample.IsManager || !Model.weekGrouped[i].theSample.IsLocked) //if the date is not locked because of lock date or logged in user is manager
							{
								Model.weekGrouped[i].theSample.Hidden = true;
								@Html.Partial("_AjaxTimeEntryBody2", Model.weekGrouped[i].theSample)
							}
							else if (!Model.weekGrouped[i].theEntries.Any())//date is locked for regular user, there is no existing entry so we need 2 sample entries for styling purpose
							{
								@Html.Partial("_AjaxTimeEntryBody2", Model.weekGrouped[i].theSample)
							}
						}
					</div>
				</div>
			</div>
		} 
		@*
	</div>
}*@

<div class="pull-right">
	<a href=@Context.Request.RawUrl>
		<span class="btn btn-danger" >@Strings.Cancel</span>
	</a>
	<span class="btn btn-primary" onclick="saveForm()" style="margin-right: 15px;">@Strings.Save</span>
</div>
