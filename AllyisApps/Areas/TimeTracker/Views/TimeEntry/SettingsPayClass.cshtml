@using AllyisApps.ViewModels.TimeTracker.TimeEntry;
@model SettingsPayClassesViewModel

@{
	ViewBag.TitleBar = Strings.Settings;
	ViewBag.Title = Strings.PClasses;
	DisplayHints.BreadcrumbNavPartialLocation = "~/Areas/TimeTracker/Views/Shared/_BreadcrumbNavPartial.cshtml";
	DisplayHints.LayoutThemeBundle = "~/Content/Timetracker";
	Layout = "~/Areas/TimeTracker/Views/Shared/_TimeTrackerSidebar.cshtml";
	ViewData["UserId"] = Model.UserId;
	ViewData["SubscriptionId"] = Model.SubscriptionId;
	ViewData["SubscriptionName"] = Model.SubscriptionName;
}

@section css {
	<link rel="stylesheet" type="text/css" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />
}


<div class="container">
	<div class="row slim">
		<div class="col-sm-2">
			@Html.Partial("_ManageSettingSideBar")
		</div>

		<div class="col-sm-10">
			<div class="panel panel-info">
				<div class="panel-heading">
					<h1 class="panel-title">@Strings.PClasses</h1>
				</div>
				<div id="PayClasses">
					<table class="table table-condensed">
						<thead>
							<tr>
								<th>@Strings.PClass</th>
								<th><span class="pull-right">@Strings.Merge</span></th>
								<th><span class="pull-right">@Strings.Delete</span></th>
							</tr>
						</thead>
						@foreach (SettingsPayClassesViewModel.PayClassViewModel payClass in Model.PayClasses)
						{
							<tr>
								@{
									string _payClassName = Strings.ResourceManager.GetString(payClass.PayClassName.Replace(" ", string.Empty)) ?? payClass.PayClassName;
								}
								<td>@_payClassName</td>
								@if (_payClassName != Strings.Regular && _payClassName != Strings.Overtime && _payClassName != Strings.Holiday && _payClassName != Strings.PaidTimeOff && _payClassName != Strings.UnpaidTimeOff)
								{
									<td>
										<a href="javascript: void(0);" class="text-muted" title="@Strings.MergePayClass"
											onclick='mergePayClass("@payClass.PayClassId")'><span class="fa fa-fw fa-object-group pull-right"></span></a>
									</td>
									<td>
										<a href="javascript: void(0);" class="text-muted" title="@Strings.DeletePayClass"
											onclick='deletePayClass("@payClass.PayClassId", "\"@_payClassName\"")'><span class="fa fa-fw fa-remove text-danger pull-right"></span></a>
									</td>
								}
								else
								{
									<td></td>
									<td></td>
								}
							</tr>
									}
						<tr>
							@using (Html.BeginForm(ActionConstants.CreatePayClass, ControllerConstants.TimeEntry, new { subscriptionId = Model.SubscriptionId, id = Model.UserId }, FormMethod.Post))
							{
								@Html.AntiForgeryToken();
								@Html.HiddenFor(m => m.SubscriptionId)
								<td><input type="text" name="NewPayClass" class="form-control" required /></td>
								<td><span class="pull-right"></span></td>
								<td><input class="btn btn-primary pull-right" type="submit" value="@Strings.Add" /></td>
							}
						</tr>
					</table>
				</div>
			</div>
		</div>
	</div>
</div>

@section scripts{
	@Scripts.Render("~/bundles/moment")
	<script type="text/javascript">
		deletePayClassWarning = "@Html.Raw(Strings.ConfirmDeletePayClass)";
		mergePayClassUrl = "@Url.Action(ActionConstants.MergePayClass , ControllerConstants.TimeEntry, new { subscriptionId = ViewData["SubscriptionId"], userId = -1 })";
		deletePayClassUrl = "@Url.Action(ActionConstants.DeletePayClass, ControllerConstants.TimeEntry, new { subscriptionId = ViewData["SubscriptionId"], userId = -1 })";

		function deletePayClass(payClassId, payClassName) {
			if (confirm(deletePayClassWarning.replace('{0}', payClassName))) {
				window.location = deletePayClassUrl.replace('-1', payClassId);
			}
		}

		function mergePayClass(payClassId) {
			window.location = mergePayClassUrl.replace('-1', payClassId);
		}
	</script>
}