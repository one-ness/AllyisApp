@using AllyisApps.ViewModels.ExpenseTracker.Expense;
@using AllyisApps.Core;
@using AllyisApps.Services;
@using AllyisApps.Areas.ExpenseTracker.ViewModels.Expense;

@model ExpenseCreateModel

@{
	ViewBag.Title = Strings.Report;
	Layout = "~/Areas/ExpenseTracker/Views/Shared/_Layout.cshtml";
	string submitAction = Model.Report == null ? "CreateReport" : "UpdateReport";
	string submitName = Model.Report == null ? "Create" : "Update";
}
@Scripts.Render("~/bundles/jquery")

@using (Html.BeginForm(submitAction, ControllerConstants.Expense, FormMethod.Post, htmlAttributes: new { @id = "reportForm", enctype = "multipart/form-data" }))
{
	<div class="panel panel-info" style="background-color: #f5f5f5; float: right; width: 300px; position: relative; z-index: 10">
		<div class="panel-heading"><span class="panel-title">Attachments</span></div>
		<div class="files" id="files">
			@{
				Model.Files.Add(new AllyisApps.Services.Expense.ExpenseFile(null, "", ""));
				for (int i = 0; i < Model.Files.Count; i++)
				{
					var file = new ExpenseFileModel()
					{
						File = Model.Files[i],
						Index = i
					};
					Html.RenderAction("DisplayFile", file);
				}
			}
		</div>
		<a class="btn btn-fa hidden-create add-button"
		   onclick="addFile()">
			<span class="glyphicon glyphicon-plus"></span>
		</a>
	</div>

	<div class="col-md-6" style="float: left;">
		<div class="row">
			@{
				var statusList = Enum.GetValues(typeof(ExpenseStatusEnum)).Cast<ExpenseStatusEnum>().Select(v => new SelectListItem
				{
					Text = v.ToString(),
					Value = ((int)v).ToString()
				}).ToList();
				
				int reportId = Model.Report == null ? -1 : Model.Report.ExpenseReportId;
				if (Model.Report == null)
				{
					Model.Report = new ExpenseReport();
					Model.Items = new List<ExpenseItem>();
				}
			}
			<input type="hidden" name="reportId" value="@reportId" />
			<input type="hidden" name="accountId" value="@Model.CurrentUser" />
			<input type="hidden" name="submittedById" value="@Model.CurrentUser" />
			<input type="hidden" name="subscriptionId" value="@Model.SubscriptionId" />
			<div class="form-group">
				<div class="left-label">
					<label>Report Name</label>
				</div>
				<div class="right-input">
					<input type="text" name="ReportName" value="@Model.Report.ReportTitle" class="form-control" />
				</div>
				<div class="left-label">
					<label>Business Justification</label>
				</div>
				<div class="right-input">
					<input type="text" name="BusinessJustification" value="@Model.Report.BusinessJustification" class="form-control" />
				</div>
				@*<div class="left-label">
					<label>Status</label>
				</div>
				<div class="right-input">
					@Html.DropDownListFor(m => m.Report.ReportStatus, statusList, new { id = "reportStatus", @class = "form-control", name = "reportStatus", style = "display: inline-block; width: 150px" })
				</div>*@
			</div>
		</div>
		<br>
	</div>
	
	<div style="clear: both;">
		<div class="panel panel-default" style="background-color: #f5f5f5;">
			<div class="panel-heading">
				Items
			</div>
			<div class="items">
				@{
					if (Model.Items.Count == 0)
					{
						Model.Items.Add(new ExpenseItem());
					}
					Html.RenderAction("DisplayItems", Model);
				}
			</div>
		</div>

		<div class="row pull-right">
			<div class="col-xs-12">
				<div>
					<input class="btn btn-primary" type="submit" name="submitType" value="Submit" title="Export Excel Expense Tracker entries" style="display: inline-block;"/>
					<input class="btn btn-primary" type="submit" name="submitType" value="Save Draft" title="Export Excel Expense Tracker entries" style="display: inline-block;" />
					@Html.ActionLink("Cancel", "Index", new { }, new { @class = "btn btn-reject", type = "button", name = "viewDataButton", value = "Cancel", title = "Export Excel Expense Tracker entries", style = "display: inline-block; color: white !important; border-color: maroon !important;" })
				</div>
			</div>
		</div>
	</div>
}

@*<div class="col-xs-12">
	<div class="panel panel-default">
		<div class="panel-body" style="padding: 0px">
		</div>
		<div id="data-message" class="panel-footer">
		</div>
	</div>
</div>*@

@section css
{
	<link rel="stylesheet" type="text/css" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />
	<link rel="stylesheet" type="text/css" href="~/Content/jquery.comiseo.daterangepicker.css" />
}

@section scripts
{
	@*Date range picker dependencies:*@
	@Scripts.Render("~/bundles/jqueryui")
	@Scripts.Render("~/bundles/moment")

	<script src="~/Scripts/allyis-pages-with-filter.js" type="text/javascript"></script>
	@Scripts.Render("~/bundles/daterangepicker")
	<script type="text/javascript">
		pwf.setPageLimit(15);
		pwf.setPageButtonLimit(10);
		pwf.setRowClass("previewRow");

		var file_index = 1;
		var item_index = 1;

		function addFile() {
			console.log('adding file');
			var data = @Html.Raw(Json.Encode(new ExpenseFileModel() { Index = -1 }));
			data.Index = file_index;
			$.ajax({
				url: '@Url.Action("DisplayFile")',
				data: data,
				success: function (response) {
					$('.files').append(response);
				}
			});
			file_index += 1;
		}

		function removeFile(index) {
			console.log('removing file');
			$('.file-input').last().remove();
			file_index -= 1;
		}

		function setDatePickers() {
			console.log('setting date picker');
			$('.datepicker').each(function () {
				$(this).datepicker({
					changeMonth: true,
					changeYear: true
				});
			});
		}
		setDatePickers();
	</script>
}