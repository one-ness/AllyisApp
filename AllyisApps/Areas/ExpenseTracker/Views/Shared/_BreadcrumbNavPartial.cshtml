<li class="dropdown link-zone">
    @{
        bool manager = false;
        try
        {
            manager = (bool)ViewData["IsManager"];
        }
        //Only set ViewData["IsManager"] on pages visible to both managers and users. So if the try fails, it'll be on a page only managers can get to anyway.
        //If ViewData["IsManager"] isn't set on a page it should be, then the options will be visible to a user when they shouldn't, but actual access permissions still prevent them from getting there.
        catch
        {
            manager = true;
        }
        var userId = ViewData["UserId"];
        var subId = ViewData["SubscriptionId"];
    }
    <a class="dropdown-toggle" id="TheDropdown1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        @String.Format("{0}", ViewData["SubscriptionName"]) <span class="caret"></span>
    </a>

    <ul class="dropdown-menu dropdown-menu-right" id="TheDropdown2">
		<li>@Html.ActionLink("Create Report", ActionConstants.Create, ControllerConstants.Expense, new { subscriptionId = subId })</li>
		<li>@Html.ActionLink("Reports", ActionConstants.Index, ControllerConstants.Expense, new { subscriptionId = subId })</li>
		@if (manager){ <li>@Html.ActionLink("Pending", ActionConstants.Pending, ControllerConstants.Expense, new { subscriptionId = subId })</li> }
    </ul>
</li>

