@model AllyisApps.ViewModels.Auth.ChangePasswordViewModel
@{
    ViewBag.Title = Strings.ChangePassword;
}
<div class="shrink-wrap-center">
    <div class="min300">
        @using (Html.BeginForm(ActionConstants.ChangePassword, ControllerConstants.Account, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })
            <strong id="capsWarningDiv" style="visibility:hidden">@Strings.CapsLock</strong>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.OldPassword, Strings.OldPassword)
                @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control", @onkeypress = "capsCheck(event)", @onkeydown = "capsCheck(event)" })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.NewPassword, Strings.NewPassword)
                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", @onkeypress = "capsCheck(event)", @onkeydown = "capsCheck(event)" })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.ConfirmPassword, Strings.NewPasswordConfirm)
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @onkeypress = "capsCheck(event)", @onkeydown = "capsCheck(event)" })
            </div>

            <div class="form-group allyis-action-buttons">
                <a href="@Url.Action(ActionConstants.Index, ControllerConstants.Account )" class="btn btn-default">@Strings.Cancel</a>
                <input type="submit" class="btn btn-primary" value=@Strings.ChangePassword />
            </div>
        }
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/CapsCheck");
}
