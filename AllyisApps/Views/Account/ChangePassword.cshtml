@model ChangePasswordViewModel
@{
	ViewBag.Title = Strings.ChangePassword;
}
<div class="container">
	<div class="shrink-wrap-center">
		<div class="min300">
			@using (Html.BeginForm(ActionConstants.ChangePassword, ControllerConstants.Account, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
			{
				@Html.AntiForgeryToken()
				@Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })
				<div class="form-group">
					@Html.ReqLabelFor(m => m.OldPassword, Strings.OldPassword)
					@Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.OldPassword)
				</div>
				<div class="form-group">
					@Html.ReqLabelFor(m => m.NewPassword, Strings.NewPassword)
					@Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.NewPassword)
				</div>
				<div class="form-group">
					@Html.ReqLabelFor(m => m.ConfirmPassword, Strings.NewPasswordConfirm)
					@Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
					@Html.ValidationMessageFor(m => m.ConfirmPassword)
				</div>
				<div class="field-validation-error" id="capsWarningDiv" style="visibility:hidden; height:0px"><span>@Strings.CapsLock</span></div>
				<div class="form-group allyis-action-buttons">
					<a href="@Url.Action(ActionConstants.Index, ControllerConstants.Account)" class="btn btn-default">@Strings.Cancel</a>
					<input type="submit" class="btn btn-primary btn-gray" value=@Strings.ChangePassword />
				</div>
			}
		</div>
	</div>
</div>

@section Scripts {
	@Scripts.Render("~/bundles/CapsCheck");
}