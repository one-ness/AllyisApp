@using AllyisApps.ViewModels.Auth;
@using AllyisApps.Services
@model PermissionsManagementViewModel

@{
    ViewBag.Title = Strings.Permissions;
    Layout = "~/Views/Shared/_Layout.cshtml";

    int productId = Model.TimeTrackerId;
    var query = (from entry in Model.Subscriptions where entry.ProductId == productId select entry).FirstOrDefault();
    bool hasTimeTracker = query != null ? true : false;
}

@Html.AntiForgeryToken()

<div id="permissions-wrap">
    <div id="flex-wrap">
        <div id="source-col" class="panel panel-default">
            <div class="panel-heading">
                <h1 class="panel-title">@Strings.Users</h1>
                <div class="controls">
                    <select id="filter-dropdown" class="form-control">
                        <option value="@Model.Filters.AllUsers.UsersValue()">@(Strings.ResourceManager.GetString(Model.Filters.AllUsers.Name.Replace(" ", string.Empty) ?? Model.Filters.AllUsers.Name))</option>
                        <option value="@Model.Filters.UnassignedUsers.UsersValue()">@(Strings.ResourceManager.GetString(Model.Filters.UnassignedUsers.Name.Replace(" ", string.Empty) ?? Model.Filters.UnassignedUsers.Name))</option>
                        @foreach (FilterGroup group in Model.Filters.FilterGroups)
                        {
                            string gOptGroup = group.OptionGroup;
                            if (!(gOptGroup == ProductNameKeyConstants.TimeTracker && !hasTimeTracker)) // don't display option group for TimeTracker if Org doesn't have TimeTracker
                            {
                                <optgroup label="@(Strings.ResourceManager.GetString(gOptGroup.Replace(" ", string.Empty) ?? gOptGroup))">
                                    @foreach (AllyisApps.ViewModels.Auth.Filter filt in group.Filters)
                                    {
                                        <option value="@filt.UsersValue()">@(Strings.ResourceManager.GetString(filt.Name.Replace(" ", string.Empty) ?? filt.Name))</option>
}
                                </optgroup>
}
                        }
                    </select>

                    <input id="user-search" type="text" placeholder=@Strings.UserSearchPlaceholder class="form-control" />
                </div>
            </div>
            <div id="user-list" class="list-group list-group-swap">
                @foreach (UserPermissionsManagement user in Model.UserPermissions)
                {
                    <div class="list-group-item">
                        <input type="checkbox" data-name="@user.UserName" id="@user.UserId" data-search="@user.UserName" />
                        <label for="@user.UserId">@user.UserName</label>
                    </div>}
                @* There was a display issue on chrome where a useless scrollbar would appear if the last element was not included (or didn't display).
                    This makes sure the final element is always included and displays practically invisibly. *@
                <a class="list-group-item included" style="visibility: hidden; height: 1px; border: 0;"></a>
            </div>
        </div>
        <div class="next-up">
            <i class="fa fa-arrow-right text-muted"></i>
        </div>
        <div id="target-col" class="panel panel-default">
            <div class="panel-heading">
                <h1 class="panel-title">@Strings.Actions</h1>
            </div>
            <div style="padding:0;" class="panel-body">
                <div id="actions" class="list-group">
                    <div class="list-group-item list-group-swap">
                        @Strings.Organization<div class="list-group-item">
                            <input type="checkbox" data-value="orgRoleTarget_@((int)OrganizationRole.Owner)" id="OrgSetOwner" />
                            <label for="OrgSetOwner">@Strings.SetOwner</label>
                        </div><div class="list-group-item">
                            <input type="checkbox" data-value="orgRoleTarget_@((int)OrganizationRole.Member)" id="OrgSetMember" />
                            <label for="OrgSetMember">@Strings.SetMember</label>
                        </div><div class="list-group-item">
                            <input type="checkbox" data-value="orgRoleTarget_-1" id="OrgRemove" class="master-check" />
                            <label for="OrgRemove">@Strings.RemoveOrg</label>
                        </div>
                    </div>
                    @if (hasTimeTracker)
                    {
                        <div class="list-group-item list-group-swap">
                            @Strings.TimeTracker<div class="list-group-item">
                                <input type="checkbox" data-value="timeTrackerRoleTarget_@((int)TimeTrackerRole.Manager)" id="TTSetManager" />
                                <label for="TTSetManager">@Strings.SetManager</label>
                            </div><div class="list-group-item">
                                <input type="checkbox" data-value="timeTrackerRoleTarget_@((int)TimeTrackerRole.User)" id="TTSetUser" />
                                <label for="TTSetUser">@Strings.SetUser</label>
                            </div><div class="list-group-item">
                                <input type="checkbox" data-value="timeTrackerRoleTarget_-1" id="TTRemove" />
                                <label for="TTRemove">@Strings.RemoveFromSubscription</label>
                            </div>
                        </div>}
                </div>
            </div>
            <div class="panel-footer">
                <div class="form-group allyis-action-buttons status-root" id="do-it-button" style="margin: 0px;">
                    <br />
                    @Html.ActionLink(Strings.Cancel, ActionConstants.ManageOrg, ControllerConstants.Account, null, new { @class = "btn btn-default" })
                    <input type="submit" value="@Strings.Save" class="btn btn-primary" id="actually-do-it" />
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        var user_meta = @Html.Raw(Model.UserMetaData);
    </script>
    @Scripts.Render("~/bundles/AccountPermission");
}
