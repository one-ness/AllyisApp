@model AddMemberViewModel

@{
	ViewBag.Title = Strings.AddMember;
}

<div class="shrink-wrap-center">
	<div class="min300">
		@using (Html.BeginForm(ActionConstants.AddMember, ControllerConstants.Account, FormMethod.Post, new { organizationId = "OrgAddForm" }))
		{
			@Html.AntiForgeryToken()
			@Html.HiddenFor(m => m.OrganizationId)
			@Html.ValidationSummary(true)
			<div class="row">
				@*<div class="col-xs-12">
					<table id="org-details" class="table table-striped table-condensed">
						<tr>
							<td><label>@Strings.Email</label></td>
							<td>@Html.DisplayFor(m => m.Email)</td>
						</tr>
						<tr>
							<td><label>@Strings.FirstName</label></td>
							<td>@Html.DisplayFor(m => m.FirstName)</td>
						</tr>
						<tr>
							<td><label>@Strings.LastName</label></td>
							<td>@Html.DisplayFor(m => m.LastName)</td>
						</tr>
						<tr>
							<td><label>@Strings.DateOfBirth</label></td>
							<td>@Html.DisplayFor(m => m.DateOfBirth)</td>
						</tr>
						<tr>
							<td><label>@Strings.PhoneNumber</label></td>
							<td>@Html.DisplayFor(m => m.PhoneNumber)</td>
						</tr>
						<tr>
							<td><label>@Strings.Address</label></td>
							<td>@Html.DisplayFor(m => m.Address)</td>
						</tr>
						<tr>
							<td><label>@Strings.City</label></td>
							<td>@Html.DisplayFor(m => m.City)</td>
						</tr>
						<tr>
							<td><label>@Strings.State</label></td>
							<td>@Html.DisplayFor(m => m.StateName)</td>
						</tr>
						<tr>
							<td><label>@Strings.Country</label></td>
							<td>@Html.DisplayFor(m => m.CountryName)</td>
						</tr>
						@if (Model.CanEditMember)
						{
							<tr>
								<td>
									<div>
										@Html.ReqLabelFor(m => m.EmployeeId, Strings.EmployeeId)
									</div>
								</td>
								<td>
									<div>
										@Html.TextBoxFor(m => m.EmployeeId, new { @class = "form-control" })
										@Html.ValidationMessageFor(m => m.EmployeeId)
									</div>
								</td>
							</tr>
							<tr>
								<td>
									<div>
										@Html.ReqLabelFor(m => m.OrgRolesList, string.Format("{0} Role", Model.OrganizationName))
									</div>
								</td>
								<td>
									<div class="role-drop-down">
										@Html.HiddenFor(m => m.OrgRolesList)
										@Html.DropDownListFor(m => m.SelectedOrganizationRoleId, new SelectList(Model.OrgRolesList, "Key", "Value"), new { @class = "form-control" })
									</div>
								</td>
							</tr>

							int count = 0;
							foreach (var item in Model.SubscriptionRoles)
							{
								<tr>
									<td>
										<div>
											@Html.HiddenFor(x => x.SubscriptionRoles[count].SubscriptionId)
											@Html.HiddenFor(x => x.SubscriptionRoles[count].SubscriptionName)
											@Html.ReqLabelFor(x => x.SubscriptionRoles[count].RoleList, string.Format("{0} Role", item.SubscriptionName))
										</div>
									</td>
									<td>
										<div class="role-drop-down">
											@Html.DropDownListFor(x => x.SubscriptionRoles[count].SelectedRoleId, new SelectList(item.RoleList, "Key", "Value"), new { @class = "form-control" })
										</div>
									</td>
								</tr>
								count++;
							}
						}
						else
						{
							<tr>
								<td><label>@Strings.EmployeeId</label></td>
								<td>@Html.DisplayFor(m => m.EmployeeId)</td>
							</tr>
						}
					</table>
				</div>*@










				<div class="col-md-6 sm-control-width">
					<div class="form-group">
						@Html.ReqLabelFor(model => model.FirstName, Strings.FirstName)
						@Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						@Html.ReqLabelFor(model => model.LastName, Strings.LastName)
						@Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						@Html.ReqLabelFor(model => model.Email, Strings.Email)
						@Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
						@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
					</div>
					<div class="form-group">
						@Html.ReqLabelFor(model => model.EmployeeId, Strings.EmployeeId)
						@Html.TextBoxFor(model => model.EmployeeId, new { @class = "form-control", @maxlength = "16", @placeholder = Model.EmployeeId })
						@Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
					</div>
				</div>
				<div class="col-md-6 sm-control-width" style="margin-top: 30px;">
					<div class="form-group">
						<div class="form-group col-md-6">
							@Html.ReqLabelFor(x => x.OrgRole, Model.orgName + " Role")
						</div>
						<div class="form-group col-md-6">
							@Html.DropDownListFor(x => x.OrgRoleSelection, Model.OrgRole, new { @class = "form-control" })
						</div>
					</div>
					<div class="form-group">
						<div class="form-group col-md-6">
							@if (Model.hasTT)
							{ @Html.ReqLabelFor(x => x.TTRoles, Model.ttName + " Role") }
						</div>
						<div class="form-group col-md-6">
							@if (Model.hasTT)
							{ @Html.DropDownListFor(x => x.ttSelection, Model.TTRoles, new { @class = "form-control" }) }
						</div>
					</div>

					<div class="form-group">
						<div class="form-group col-md-6">
							@if (Model.hasET)
							{ @Html.ReqLabelFor(x => x.ETRoles, Model.etName + " Role") }
						</div>
						<div class="form-group col-md-6">
							@if (Model.hasET)
							{@Html.DropDownListFor(x => x.etSelection, Model.ETRoles, new { @class = "form-control" }) }
						</div>
					</div>
					<div class="form-group allyis-action-buttons pull-right">
						<a href="@Url.Action(ActionConstants.ManageOrg, ControllerConstants.Account, new { @id = Model.OrganizationId })" class="btn btn-default">@Strings.Cancel</a>&nbsp;
						<input type="submit" id="addMember" value="@Strings.Add" class="btn btn-primary" />
					</div>
				</div>
			</div>
			<div class="row">
				<div class="col-xs-12">
				</div>
			</div>
		}
		<div class="row">
			<div class="col-md-3"></div>
			<div class="col-md-6 sm-control-width">
				<label>@Strings.AddMultipleMembers</label>
				@using (Html.BeginForm(ActionConstants.Import, ControllerConstants.Account, new { id = Model.OrganizationId }, FormMethod.Post, new { enctype = "multipart/form-data" }))
				{
					@Html.AntiForgeryToken();
					<div>
						<input type="file" id="upload-box" name="upload" style="display:none;"
							   onchange="$('#upload-file-name-display').val($(this).val().replace('C:\\fakepath\\', ''));" />
						<input id="upload-file-name-display" class="form-control"
							   onchange="$('#upload-file-name-display').val($(this).val().replace('C:\\fakepath\\', ''));" />
					</div>

					<div style="margin-top: 10px; margin-bottom: 15px; float:right;">
						<a class="btn btn-primary" onclick="$('input[id=upload-box]').click();">@Strings.ChooseFile</a>
						<input style="margin-left: 10px" type="submit" id="upload-button" value="@Strings.Upload" class="btn btn-primary" />
					</div>
				}
				@using (Html.BeginForm(ActionConstants.Template, ControllerConstants.Account, null, FormMethod.Get, new { id = "template-form" }))
				{
					<div style="margin-top: 10px; margin-bottom: 15px; float:left">
						<input type="submit" form="template-form" id="template-button" value="@Strings.Template" class="btn btn-primary" />
					</div>
				}
			</div>
			<div class="col-md-3"></div>
		</div>
	</div>
</div>

@section Scripts {
	@Scripts.Render("~/bundles/AccountAdd");
}