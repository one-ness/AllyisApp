@model AllyisApps.ViewModels.Auth.EditSubscriptionViewModel
@{
		ViewBag.Title = Strings.EditSubscription;
		List<SelectListItem> items = new List<SelectListItem>() { new SelectListItem() { Text = Model.Name }, new SelectListItem() { Text = "Unsubscribe" } };
		if (!String.IsNullOrEmpty(Model.NextName))
		{
			items.Add(new SelectListItem() { Text = Model.NextName });
		}
	}

<div class="row">
	<div class="col-md-6 col-md-push-3">
		<div class="col-md-12 text-center">
			<img src="~/@string.Format("Content/icons/{0}.png", Model.Name.Replace(" ", ""))" alt="@Model.Name" style="margin-right:5px;" />
			<h2 style="display:inline-block;">
				@Model.Name
			</h2>
		</div>
		<div class="col-md-10 col-md-push-1" style="margin-top:20px;">
			<div class="col-md-12">
				@Model.Description
			</div>

			<div>
				@using (Html.BeginForm(ActionConstants.EditSubscription, ControllerConstants.Account, new { id = Model.SubscriptionId, idTwo = Model.SkuId }, FormMethod.Post, new { @class = "col-md-12", @style = "margin-top:20px;display: inline-block" })) // , @onsubmit = String.Format("return confirm(\"{0}\")", Html.Raw(String.Format(Strings.WarningWhenUnsubscribing, Model.Name))) TODO: make this only fire on unsubscribe action.
				{
					@Html.ReqLabelFor(m => m.SubscriptionName, "Subscription Name")
					@Html.TextBoxFor(m => m.SubscriptionName, new { @class = "form-control margined", @placeholder = Model.ProductName })
					@Html.AntiForgeryToken()
					<input type="hidden" name="SubscriptionId" value="@Model.SubscriptionId" />
					<input type="hidden" name="SkuId" value="@Model.SkuId" />
					<input type="hidden" name="ProductId" value="@Model.ProductId" />
					<input type="hidden" name="SkuIdNext" value="@Model.SkuIdNext" />
					<input type="hidden" name="OrganizationId" value="@Model.OrganizationId" />
					<input type="hidden" name="NextName" value="@Model.NextName" />
					<div style="display:inline-block;">
						<label for="subscriptionType">Change subscription: </label>
					</div>


					<div class="pull-right" style="margin-top:10px;">
						<input type="submit" value="@Strings.Save" class="btn btn-primary" id="save" />
						@Html.ActionLink(Strings.Cancel, ActionConstants.ManageOrg, ControllerConstants.Account, new { id = Model.OrganizationId }, htmlAttributes: new { @class = "btn btn-default" })
					</div>
					<div>
						@Html.DropDownListFor(m => m.ActionType, items)
					</div>

			}

			</div>
		</div>
	</div>
</div>