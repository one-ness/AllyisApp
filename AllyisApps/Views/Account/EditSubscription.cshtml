@model AllyisApps.ViewModels.Auth.EditSubscriptionViewModel
@{
	ViewBag.Title = Strings.EditSubscription;
}

<div class="row">
			<div class="col-md-4 col-md-push-4 panel-heading">
						<div class="col-md-12  text-center" style="margin-bottom:25px;">
							<img src="~/@string.Format("Content/icons/{0}.png", Model.Name.Replace(" ", ""))" alt="@Model.Name" style="margin-right:5px; align-content:center;" />
							<h2 style="display:inline-block;">
								@Model.Name
							</h2>
						</div>
						<div>
							@Model.Description
							<div style="margin-top:10px;">
								@if (Model.SkuId > Model.SkuIdNext)
								{
									using (Html.BeginForm(ActionConstants.Subscribe, ControllerConstants.Account, new { productId = Model.ProductId, productName = Model.Name, selectedSku = Model.SkuIdNext, subscriptionName = Model.NextName, previousSku = Model.SkuId, organizationId = Model.OrganizationId, selectedSkuName = Model.NextName }, FormMethod.Post, new { @style = "display: inline-block", @onsubmit = String.Format("return confirm(\"{0}\")", Html.Raw("You are about to Downgrade from " + Model.Name + " to " + Model.NextName)) }))
									{
										@Html.AntiForgeryToken()
										<input type="submit" value="@Strings.Downgrade" class="btn btn-primary pull-left" id="submitDowngrade" />
									}
								}
								else
								{
									using (Html.BeginForm(ActionConstants.Subscribe, ControllerConstants.Account, new { productId = Model.ProductId, productName = Model.Name, selectedSku = Model.SkuIdNext, subscriptionName = Model.NextName, previousSku = Model.SkuId, organizationId = Model.OrganizationId, selectedSkuName = Model.NextName }, FormMethod.Post, new { @style = "display: inline-block", @onsubmit = String.Format("return confirm(\"{0}\")", Html.Raw("You are about to Upgrade from " + Model.Name + " to " + Model.NextName)) }))
									{
										@Html.AntiForgeryToken()
										<input type="submit" value="@Strings.Upgrade" class="btn btn-primary pull-left" id="submitUpgrade" />
									}
								}
								@using (Html.BeginForm(ActionConstants.Unsubscribe, ControllerConstants.Account, new { id = Model.SubscriptionId, idTwo = Model.SkuId }, FormMethod.Post, new { @class = "pull-right", @style = "display: inline-block", @onsubmit = String.Format("return confirm(\"{0}\")", Html.Raw(String.Format(Strings.WarningWhenUnsubscribing, Model.Name))) }))
								{
									@Html.AntiForgeryToken()
									<input data-val="true" id="OrganizationId" name="OrganizationId" type="hidden" value="@Model.OrganizationId" />
									<input data-val="true" id="SkuId" name="SkuId" type="hidden" value="@Model.SkuId" />
									<input data-val="true" id="CurrentSubscription" name="CurrentSubscription.SubscriptionId" type="hidden" value="@Model.SubscriptionId" />
									<input type="hidden" name="SelectedSku" value="0" />
									<input type="submit" value="@Strings.Unsubscribe" class="btn btn-primary" id="submitDelete" />
									@Html.ActionLink(Strings.Cancel, ActionConstants.Skus, ControllerConstants.Account, new { id = Model.OrganizationId }, htmlAttributes: new { @class = "btn btn-default" })
								}
							</div>
						</div>
					</div>
			</div>