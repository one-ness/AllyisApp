@model AllyisApps.ViewModels.Auth.EditSubscriptionViewModel
@{
		ViewBag.Title = Strings.EditSubscription;
		IEnumerable<SelectListItem> items = new[] { new SelectListItem() { Text = "Unsubscribe" }, new SelectListItem() { Text = Model.NextName } };
	}

<div class="shrink-wrap-center">
	<div class="col-md-12">
		<div class="text-center">
			<img src="~/@string.Format("Content/icons/{0}.png", Model.Name.Replace(" ", ""))" alt="@Model.Name" style="margin-right:5px;" />
			<h2 style="display:inline-block;">
				@Model.Name
			</h2>
		</div>
		<div class="text-center col-md-offset-4 col-md-4" style="margin-top:10px;">
			@Model.Description
		</div>
		<div class="text-center col-md-12" style="margin-top:25px;">
			@using (Html.BeginForm(ActionConstants.EditSubscription, ControllerConstants.Account, new { id = Model.SubscriptionId, idTwo = Model.SkuId }, FormMethod.Post, new { @class = "col-md-offset-1", @style = "display: inline-block", @onsubmit = String.Format("return confirm(\"{0}\")", Html.Raw(String.Format(Strings.WarningWhenUnsubscribing, Model.Name))) }))
			{
				@Html.ReqLabelFor(m => m.SubscriptionName, "Subscription Name")
				@Html.TextBoxFor(m => m.SubscriptionName, new { @class = "form-control", @placeholder = Model.ProductName })
				@Html.AntiForgeryToken()
				<input type="hidden" name="ProductId" value="@Model.ProductId" />
				<input type="hidden" name="SkuIdNext" value="@Model.SkuIdNext" />
				<input type="hidden" name="OrganizationId" value="@Model.OrganizationId" />
				<input type="hidden" name="NextName" value="@Model.NextName" />
				<label for="subscriptionType">Change to: </label>
				@Html.DropDownListFor(m => m.ActionType, items)
				<input type="submit" value="@Strings.Save" class="btn btn-primary" id="save" />
				@Html.ActionLink(Strings.Cancel, ActionConstants.ManageOrg, ControllerConstants.Account, new { id = Model.OrganizationId }, htmlAttributes: new { @class = "btn btn-default" })
			}

		</div>
	</div>
</div>




@*<div class="row">
			<div class="col-md-4 col-md-push-4 panel-heading">
						<div class="col-md-12  text-center" style="margin-bottom:25px;">
							<img src="~/@string.Format("Content/icons/{0}.png", Model.Name.Replace(" ", ""))" alt="@Model.Name" style="margin-right:5px; align-content:center;" />
							<h2 style="display:inline-block;">
								@Model.Name
							</h2>
						</div>
						<div>
							@Model.Description
							<div style="margin-top:10px;">
								@if (Model.SkuId > Model.SkuIdNext)
								{
									using (Html.BeginForm(ActionConstants.Subscribe, ControllerConstants.Account, new { productId = Model.ProductId, productName = Model.Name, selectedSku = Model.SkuIdNext, subscriptionName = Model.NextName, previousSku = Model.SkuId, organizationId = Model.OrganizationId, selectedSkuName = Model.NextName }, FormMethod.Post, new { @onsubmit = String.Format("return confirm(\"{0}\")", Html.Raw("You are about to Downgrade from " + Model.Name + " to " + Model.NextName)) }))
									{
										@Html.AntiForgeryToken()
											@Html.ReqLabelFor(m => m.SubscriptionName, "Subscription Name")
											@Html.TextBoxFor(m => m.SubscriptionName, new { @class = "form-control", @placeholder = Model.ProductName })
											@Html.ValidationMessageFor(m => m.SubscriptionName)
										<input type="submit" value="@Strings.Downgrade" class="btn btn-primary pull-left" style="margin-top:15px;" id="submitDowngrade" />
									}
								}
								else
								{
									using (Html.BeginForm(ActionConstants.Subscribe, ControllerConstants.Account, new { productId = Model.ProductId, productName = Model.Name, selectedSku = Model.SkuIdNext, subscriptionName = Model.NextName, previousSku = Model.SkuId, organizationId = Model.OrganizationId, selectedSkuName = Model.NextName }, FormMethod.Post, new { @onsubmit = String.Format("return confirm(\"{0}\")", Html.Raw("You are about to Upgrade from " + Model.Name + " to " + Model.NextName)) }))
									{
										@Html.AntiForgeryToken()
											@Html.ReqLabelFor(m => m.SubscriptionName, "Subscription Name")
											@Html.TextBoxFor(m => m.SubscriptionName, new { @class = "form-control", @placeholder = Model.ProductName })
											@Html.ValidationMessageFor(m => m.SubscriptionName)
										<input type="submit" value="@Strings.Upgrade" class="btn btn-primary pull-left" style="margin-top:15px;" id="submitUpgrade" />
									}
								}
								@using (Html.BeginForm(ActionConstants.Unsubscribe, ControllerConstants.Account, new { id = Model.SubscriptionId, idTwo = Model.SkuId }, FormMethod.Post, new { @style = "margin-top:15px;", @class = "pull-right", @onsubmit = String.Format("return confirm(\"{0}\")", Html.Raw(String.Format(Strings.WarningWhenUnsubscribing, Model.Name))) }))
								{
									@Html.AntiForgeryToken()
									<input data-val="true" id="OrganizationId" name="OrganizationId" type="hidden" value="@Model.OrganizationId" />
									<input data-val="true" id="SkuId" name="SkuId" type="hidden" value="@Model.SkuId" />
									<input data-val="true" id="CurrentSubscription" name="CurrentSubscription.SubscriptionId" type="hidden" value="@Model.SubscriptionId" />
									<input type="hidden" name="SelectedSku" value="0" />
									<input type="submit" value="@Strings.Unsubscribe" class="btn btn-primary" id="submitDelete" />
									@Html.ActionLink(Strings.Cancel, ActionConstants.Skus, ControllerConstants.Account, new { id = Model.OrganizationId }, htmlAttributes: new { @class = "btn btn-default" })
								}
							</div>
						</div>
					</div>
			</div>*@