@model AllyisApps.ViewModels.Auth.EditProfileViewModel
@{
    Layout = "~/Views/Shared/_LayoutJustAForm.cshtml";
    ViewBag.Title = AllyisApps.Resources.Views.Account.Strings.EditProfile;
}
@{ ViewData.Add(ControllerConstants.Controller, ControllerConstants.Account); }
@{ ViewData.Add(ActionConstants.Action, ActionConstants.EditProfile); }

@using (Html.BeginForm((string)(ViewData[ActionConstants.Action]), (string)ViewData[ControllerConstants.Controller], new { ReturnUrl = (string)(ViewBag.ReturnUrl) }, FormMethod.Post, new { @class = "form", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(string.Empty, new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-6 min300">
            <div class="form-group">
                @Html.ReqLabelFor(m => m.Email, AllyisApps.Resources.Views.Account.Strings.Email) 
                @Html.ValidationMessageFor(m => m.Email)
                @Html.TextBoxFor(m => m.Email, new { @readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.FirstName, AllyisApps.Resources.Views.Account.Strings.FirstName)
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.LastName, AllyisApps.Resources.Views.Account.Strings.LastName)
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <label>@AllyisApps.Resources.Views.Account.Strings.DateOfBirth</label>
                @Html.HiddenFor(m => m.DateOfBirth)
                <input type="text" class="form-control" style="width: 90%; display: inline-block;" id="datePickerBirth" />@*Needs to be <input /> tag, not Html.EditorFor or a NULL birthday will show up as -1*@
                <span class="fa fa-fw fa-calendar" id="datePickerBirthButton"></span>
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.PhoneNumber, AllyisApps.Resources.Views.Account.Strings.PhoneNumber)
                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.PhoneNumber)
            </div>            
        </div>
        <div class="col-md-6 min300">
            <div class="form-group">
                @Html.ReqLabelFor(m => m.Address, AllyisApps.Resources.Views.Account.Strings.Address)
                @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.Country, AllyisApps.Resources.Views.Account.Strings.Country)
                @Html.DropDownListFor(m => m.Country, new SelectList(Model.GetLocalizedValidCoutriesDictionary(), "Key", "Value"), AllyisApps.Resources.Views.Account.Strings.DropDownEmpty, new { @id = "Country", @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.State, AllyisApps.Resources.Views.Account.Strings.State)
                @Html.DropDownListFor(m => m.State, new SelectList(new List<string>()), AllyisApps.Resources.Views.Account.Strings.DropDownEmpty, new { @id = "State", @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.City, AllyisApps.Resources.Views.Account.Strings.City)
                @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.ReqLabelFor(m => m.PostalCode, AllyisApps.Resources.Views.Account.Strings.PostalCode)
                @Html.TextBoxFor(m => m.PostalCode, new { @class = "form-control" })
            </div>
        </div>
    </div>

    <div class="form-group allyis-action-buttons">
        <a href="/Account/Index" class="btn btn-default">@AllyisApps.Resources.Views.Account.Strings.Cancel</a>
        <button class="btn btn-primary" type="submit" value=@AllyisApps.Resources.Views.Account.Strings.Save>@AllyisApps.Resources.Views.Account.Strings.Save</button>
    </div>
}

@section css {
    <link rel="stylesheet" type="text/css" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var preserveState = '@(Model != null ? (AllyisApps.Resources.ViewModels.Auth.States.ResourceManager.GetString(Model.Clean(Model.State)) ?? Model.State) : "")';
        var dropdownempty = "@AllyisApps.Resources.Views.Account.Strings.DropDownEmpty";
        var model_birthdate = @Model.DateOfBirth;        
    </script>
    @Scripts.Render("~/bundles/UpdateStateDDL");
    @Scripts.Render("~/bundles/jqueryui");
    @Scripts.Render("~/bundles/moment")
    <script src="~/Scripts/allyis-birthDatepicker.js"></script>
}
