@using AllyisApps.ViewModels.Auth;

@model ManagePermissionsViewModel
@Html.HiddenFor(m => m.OrganizationId)
@{
	ViewBag.Title = Strings.Permissions;
	Layout = "~/Views/Shared/_Layout.cshtml";

	bool hasTimeTracker = Model.Subscriptions.Where(s => s.ProductId == Model.TimeTrackerId).Any();

	Dictionary<int, string> orgRoles = new Dictionary<int, string>
	{
		{ (int)AllyisApps.Services.OrganizationRole.Member, Strings.Member },
		{ (int)AllyisApps.Services.OrganizationRole.Owner, Strings.Owner }
	};
	Dictionary<int, string> ttRoles = new Dictionary<int, string>
	{
		{ (int)AllyisApps.Services.TimeTrackerRole.User, Strings.User },
		{ (int)AllyisApps.Services.TimeTrackerRole.Manager, Strings.Manager },
		{ (int)AllyisApps.Services.TimeTrackerRole.NotInProduct, Strings.Unassigned }
	};

	Dictionary<string, int> setOrgRoles = new Dictionary<string, int>
	{
		{ Strings.RemoveOrg, -1 },
		{ Strings.SetMember, (int)AllyisApps.Services.OrganizationRole.Member },
		{ Strings.SetOwner, (int)AllyisApps.Services.OrganizationRole.Owner }
	};
	Dictionary<string, int> setTTRoles = new Dictionary<string, int>
	{
		{ Strings.RemoveFromSubscription, -1 },
		{ Strings.SetUser, (int)AllyisApps.Services.TimeTrackerRole.User },
		{ Strings.SetManager, (int)AllyisApps.Services.TimeTrackerRole.Manager }
	};
}

@Html.AntiForgeryToken()

<ul class="nav allyis-tabs">
	<li class="selected" id="OrganizationTab">@Strings.Organization</li>
	@if (hasTimeTracker)
	{
		<li id="TimeTrackerTab">@Strings.TimeTracker</li>
    }
</ul>
<div class="panel panel-default">
    <div class="panel-body" style="padding: 0px;">
        <table class="table table-hover table-condensed">
            <thead class="panel-heading">
                <tr class="no-border">
                    <th style="width: 6%;"></th>
                    <th style="width: 47%;">@Strings.User</th>
                    <th style="width: 47%;" class="tab-OrganizationTab">@Strings.OrgRole</th>
                    @if (hasTimeTracker)
                    {
                        <th class="tab-TimeTrackerTab" style="display: none; width: 47%;">@Strings.TimeTrackerRole</th>
                    }
                </tr>
                <tr class="double-bottom-border">
                    <td class="checked">
                        <input type="checkbox" class="all-check" />
                    </td>
                    <td>
                        <input type="search" placeholder="@Strings.UserSearchPlaceholder" id="userSearch" class="form-control" />
                    </td>
                    <td class="tab-OrganizationTab">
                        <select id="orgRoleFilter" class="form-control">
                            <option>@Strings.Any</option>
                            @foreach (string role in orgRoles.Values)
                            {
                                <option>@role</option>
                            }
                        </select>
                    </td>
                    @if (hasTimeTracker)
                    {
                        <td class="tab-TimeTrackerTab" style="display: none;">
                            <select id="ttRoleFilter" class="form-control">
                                <option>@Strings.Any</option>
                                @foreach (string ttrole in ttRoles.Values)
                                {
                                    <option>@ttrole</option>
                                }
                            </select>
                        </td>
                    }
                </tr>
            </thead>

            @foreach (UserPermissionsViewModel user in Model.Users)
            {
				var fullName = string.Format("{0} {1}", user.FirstName, user.LastName);

                <tr class="userRow" data-id="@user.UserId" data-name="@user.Email">
                    <td class="checked">
                        <input type="checkbox" id="check" />
                    </td>
                    <td id="name">@fullName</td>
                    <td id="orgRole" class="tab-OrganizationTab">@orgRoles[user.OrgRoleId]</td>
                    @if (hasTimeTracker)
					{
						<td id="ttRole" class="tab-TimeTrackerTab" style="display: none;">@ttRoles[user.ProductRoleIds[Model.TimeTrackerSubIndex]]</td>
                    }
                </tr>
            }

            @*This last blank row is just an easy way to have a border at the bottom of the table content*@
            <tr id="tableEnd" class="nohover">
                <td></td>
                <td></td>
                <td class="tab-OrganizationTab"></td>
                @if (hasTimeTracker) { <td class="tab-TimeTrackerTab" style="display: none;"></td> }
            </tr>
        </table>
        <div class="pageContainer">
            @*This container is populated by javascript in allyis-account-permission2.js*@
        </div>
    </div>
    <div class="panel-footer" style="height: 54px; position: relative;">
        <div class="col-xs-2 col-sm-1 col-md-1" style="text-align: right; vertical-align: middle; line-height: 33px; padding-right: 0px;">
            @Strings.Actions
        </div>
        <div class="col-xs-6 col-sm-6 col-md-5 col-lg-4">
            <select class="form-control tab-OrganizationTab" id="orgActionSelect">
                <optgroup label="@Strings.Organization">
                    @foreach (string setOrgRole in setOrgRoles.Keys)
                    {
                        <option>@setOrgRole</option>
                    }
                </optgroup>
            </select>
			@if (hasTimeTracker)
			{
				<select class="form-control tab-TimeTrackerTab" id="ttActionSelect" style="display: none;">
					<optgroup label="@Strings.TimeTracker">
						@foreach (string setTTRole in setTTRoles.Keys)
						{
							<option>@setTTRole</option>
						}
					</optgroup>
				</select>
			}
        </div>

        <div class="bottom-right">
			@Html.ActionLink(Strings.Cancel, ActionConstants.Manage, ControllerConstants.Account, null, new { @class = "btn btn-default" })
            <input type="button" class="btn btn-primary" id="do-it" value="@Strings.Save" />
        </div>
    </div>
</div>

@section scripts {
    <script type="text/javascript">
        orgActions = @Html.Raw(Json.Encode(setOrgRoles));
        ttActions = @Html.Raw(Json.Encode(setTTRoles));
        confirmMessage = "@Strings.RemoveFromOrgNoName";
    </script>
    <script src="~/Scripts/allyis-account-permission2.js" type="text/javascript"></script>
    <script src="~/Scripts/allyis-pages-with-filter.js" type="text/javascript"></script>
    @*@Scripts.Render("~/bundles/AccountPermission2");*@
    <script type="text/javascript">        @*Filters can only be set up after the above script is loaded*@
        pwf.setPageLimit(15);
        pwf.setRowClass("userRow");
        pwf.setCheckBoxSelector("#check");
        pwf.addFilter("#userSearch", "search", "#name");
        pwf.addFilter('#orgRoleFilter', 'dropDown', "#orgRole", "@Strings.Any");
        if('@hasTimeTracker' == 'True') pwf.addFilter('#ttRoleFilter', 'dropDown', "#ttRole", "@Strings.Any");
        if (sessionStorage.getItem("/ManagePermissionsPage") != null)
        {
            pwf.setPreviouslySelectedPage(sessionStorage.getItem("/ManagePermissionsPage"))
        }
    </script>
}
