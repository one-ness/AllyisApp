<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear Changes</value>
  </data>
  <data name="Current" xml:space="preserve">
    <value>Current Week</value>
  </data>
  <data name="Customer" xml:space="preserve">
    <value>Customer</value>
  </data>
  <data name="Customers" xml:space="preserve">
    <value>Customers</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DateRange" xml:space="preserve">
    <value>Date Range</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Duration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="EditUser" xml:space="preserve">
    <value>Edit User</value>
  </data>
  <data name="Employees" xml:space="preserve">
    <value>Employees</value>
  </data>
  <data name="Export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="Friday" xml:space="preserve">
    <value>Friday</value>
  </data>
  <data name="Holiday" xml:space="preserve">
    <value>Holiday</value>
  </data>
  <data name="HoursPer" xml:space="preserve">
    <value>Hours per</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="LockDate" xml:space="preserve">
    <value>Lock Date</value>
  </data>
  <data name="LRP" xml:space="preserve">
    <value>Live Report Preview</value>
  </data>
  <data name="MemberList" xml:space="preserve">
    <value>Member List</value>
  </data>
  <data name="Monday" xml:space="preserve">
    <value>Monday</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next Week</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="OffProjects" xml:space="preserve">
    <value>Unassigned Projects</value>
  </data>
  <data name="OnProjects" xml:space="preserve">
    <value>Assigned Projects</value>
  </data>
  <data name="OrgSOW" xml:space="preserve">
    <value>Organization's Week Starts On:</value>
  </data>
  <data name="PClass" xml:space="preserve">
    <value>Pay Class</value>
  </data>
  <data name="PClasses" xml:space="preserve">
    <value>Pay Classes</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous Week</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="ProjectSearchPlaceholder" xml:space="preserve">
    <value>Project Search 🔎</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="Saturday" xml:space="preserve">
    <value>Saturday</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SearchPlaceholder" xml:space="preserve">
    <value>Find Member 🔎</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="Sunday" xml:space="preserve">
    <value>Sunday</value>
  </data>
  <data name="Thursday" xml:space="preserve">
    <value>Thursday</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TrackTime" xml:space="preserve">
    <value>Track Time</value>
  </data>
  <data name="Tuesday" xml:space="preserve">
    <value>Tuesday</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Wednesday" xml:space="preserve">
    <value>Wednesday</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Actions" xml:space="preserve">
    <value>Actions</value>
  </data>
  <data name="After" xml:space="preserve">
    <value>After</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="Holidays" xml:space="preserve">
    <value>Holidays</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="Overtime" xml:space="preserve">
    <value>Overtime</value>
  </data>
  <data name="Week" xml:space="preserve">
    <value>Week</value>
  </data>
  <data name="WithAMultiplierOf" xml:space="preserve">
    <value>with a multiplier of</value>
  </data>
  <data name="BereavementLeave" xml:space="preserve">
    <value>Bereavement Leave</value>
  </data>
  <data name="Christmas" xml:space="preserve">
    <value>Christmas</value>
  </data>
  <data name="ChristmasEve" xml:space="preserve">
    <value>Christmas Eve</value>
  </data>
  <data name="DayAfterThanksgiving" xml:space="preserve">
    <value>Black Friday</value>
  </data>
  <data name="IndependenceDay" xml:space="preserve">
    <value>Independence Day</value>
  </data>
  <data name="JuryDuty" xml:space="preserve">
    <value>Jury Duty</value>
  </data>
  <data name="LaborDay" xml:space="preserve">
    <value>Labor Day</value>
  </data>
  <data name="MemorialDay" xml:space="preserve">
    <value>Memorial Day</value>
  </data>
  <data name="Merge" xml:space="preserve">
    <value>Merge</value>
  </data>
  <data name="NewYearsDay" xml:space="preserve">
    <value>New Year's Day</value>
  </data>
  <data name="OtherLeave" xml:space="preserve">
    <value>Other Leave</value>
  </data>
  <data name="PaidTimeOff" xml:space="preserve">
    <value>Paid Time Off</value>
  </data>
  <data name="Regular" xml:space="preserve">
    <value>Regular</value>
  </data>
  <data name="Thanksgiving" xml:space="preserve">
    <value>Thanksgiving</value>
  </data>
  <data name="UnpaidTimeOff" xml:space="preserve">
    <value>Unpaid Time Off</value>
  </data>
  <data name="CopyDay" xml:space="preserve">
    <value>Copy previous day</value>
  </data>
  <data name="CopyWeek" xml:space="preserve">
    <value>Copy previous week</value>
  </data>
  <data name="DayInitial" xml:space="preserve">
    <value>D</value>
  </data>
  <data name="WeekInitial" xml:space="preserve">
    <value>W</value>
  </data>
  <data name="PayClass" xml:space="preserve">
    <value>Pay Class</value>
  </data>
  <data name="NoLockDate" xml:space="preserve">
    <value>No lock date</value>
  </data>
  <data name="UseLockDate" xml:space="preserve">
    <value>Allow editing of the past</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>days</value>
  </data>
  <data name="Months" xml:space="preserve">
    <value>months</value>
  </data>
  <data name="Weeks" xml:space="preserve">
    <value>weeks</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>End Date</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start Date</value>
  </data>
  <data name="ConfirmDeleteHoliday" xml:space="preserve">
    <value>Are you sure you want to delete the holiday {0}?</value>
  </data>
  <data name="ConfirmDeletePayClass" xml:space="preserve">
    <value>Are you sure you want to delete the pay class {0}?</value>
  </data>
  <data name="DeleteHoliday" xml:space="preserve">
    <value>Delete Holiday</value>
  </data>
  <data name="DeletePayClass" xml:space="preserve">
    <value>Delete Pay Class</value>
  </data>
  <data name="MergePayClass" xml:space="preserve">
    <value>Merge With Another Pay Class</value>
  </data>
  <data name="ChoosePayClassToMerge" xml:space="preserve">
    <value>Choose a pay class to merge {0} into</value>
  </data>
</root>